<?xml version="1.0" encoding="UTF-8"?>
<all>
 <info>All the plugs</info>
 <section>
  <label>audio file formats (duration)</label>
  <info>Methods to extract duration from a file.</info>
  <section>
   <label>FLAC</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>FLAC</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>MAD</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>OGG/FLAC</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>VORBIS</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>WAV/AIFF</label>
   <info>(no doc)</info>
  </section>
 </section>
 <section>
  <label>file decoding</label>
  <info>File decoding methods.</info>
  <section>
   <label>AAC</label>
   <info>Use libfaad to decode AAC if MIME type or file extension is appropriate.</info>
  </section>
  <section>
   <label>AIFF</label>
   <info>Decode as AIFF any file with a correct header.</info>
  </section>
  <section>
   <label>FLAC</label>
   <info>Use libflac to decode any file if its MIME type or file extension is appropriate.</info>
  </section>
  <section>
   <label>IMAGE</label>
   <info>Decoder for static images.</info>
  </section>
  <section>
   <label>MAD</label>
   <info>Use libmad to decode any file if its MIME type or file extension is appropriate.</info>
  </section>
  <section>
   <label>META</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>MIDI</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>MP4</label>
   <info>Use libfaad to decode MP4 if MIME type or file extension is appropriate.</info>
  </section>
  <section>
   <label>OGG</label>
   <info>Decode a file as OGG provided that libogg accepts it.</info>
  </section>
  <section>
   <label>WAV</label>
   <info>Decode as WAV any file with a correct header.</info>
  </section>
 </section>
 <section>
  <label>image file decoding</label>
  <info>Image file decoding methods.</info>
  <section>
   <label>PPM</label>
   <info>Native decoding of PPM images.</info>
  </section>
 </section>
 <section>
  <label>metadata formats</label>
  <info>Methods to extract metadata from a file.</info>
  <section>
   <label>FLAC</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>MP4</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>OGG</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>TAGLIB</label>
   <info>(no doc)</info>
  </section>
 </section>
 <section>
  <label>playlist formats</label>
  <info>Method to parse playlist.</info>
  <section>
   <label>application/x-cue</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>application/x-mpegURL</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>audio/mpegurl</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>audio/x-mpegurl</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>audio/x-scpls</label>
   <info>(no doc)</info>
  </section>
 </section>
 <section>
  <label>protocols</label>
  <info>Methods to get a file. They are the first part of URIs: 'protocol:args'.</info>
  <section>
   <label>ANNOTATE</label>
   <info>[annotate:key="val",key2="val2",...:uri] adds the metadata to the request and is then resolved into uri</info>
  </section>
  <section>
   <label>FTP</label>
   <info>Fetch files using "/home/vagrant/.opam/system/lib/liquidsoap/lib/liquidsoap/1.2.0/liquidget".</info>
  </section>
  <section>
   <label>HTTP</label>
   <info>Fetch files using "/home/vagrant/.opam/system/lib/liquidsoap/lib/liquidsoap/1.2.0/liquidget".</info>
  </section>
  <section>
   <label>HTTPS</label>
   <info>Fetch files using "/home/vagrant/.opam/system/lib/liquidsoap/lib/liquidsoap/1.2.0/liquidget".</info>
  </section>
  <section>
   <label>MPD</label>
   <info>[mpd:tag=value] finds all files with a tag equal to a given value using mpd.</info>
  </section>
  <section>
   <label>REPLAY_GAIN</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>SAY</label>
   <info>Speech synthesis, with optional voice choice using say:voice/blah.</info>
  </section>
  <section>
   <label>TIME</label>
   <info>Speech synthesis of a message where $(time) is replaced by the current time</info>
  </section>
 </section>
 <section>
  <label>samplerate converters</label>
  <info>Methods for converting samplerate.</info>
  <section>
   <label>libsamplerate</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>native</label>
   <info>(no doc)</info>
  </section>
 </section>
 <section>
  <label>scripting values</label>
  <info>scripting values</info>
  <section>
   <label>!=</label>
   <info>Comparison of comparable values.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>%</label>
   <info>&lt;code&gt;pattern % [...,(k,v),...]&lt;/code&gt; changes in the pattern occurences of:
 - &lt;code&gt;$(k)&lt;/code&gt; into &lt;code&gt;v&lt;/code&gt;;
 - &lt;code&gt;$(if $(k2),"a","b")&lt;/code&gt; into "a" if k2 is found in the list, "b" otherwise.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,[(string*string)])-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>*</label>
   <info>Multiplication of numbers.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
  <section>
   <label>+</label>
   <info>Addition of numbers.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
  <section>
   <label>-</label>
   <info>Substraction  of numbers.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
  <section>
   <label>/</label>
   <info>Division of numbers.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
  <section>
   <label>&lt;</label>
   <info>Comparison of comparable values.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>&lt;=</label>
   <info>Comparison of comparable values.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>==</label>
   <info>Comparison of comparable values.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>&gt;</label>
   <info>Comparison of comparable values.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>&gt;=</label>
   <info>Comparison of comparable values.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>^</label>
   <info>Concatenate strings.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>_[_]</label>
   <info>l[k] returns the first v such that (k,v) is in the list l (or "" if no such v exists).</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,[(string*string)])-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>abs</label>
   <info>Absolute value.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
  <section>
   <label>add</label>
   <info>Mix sources, with optional normalization. Only relay metadata from the first source that is effectively summed.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?normalize:bool,?weights:[int],
 [source(audio='#a,video='#b,midi=0)])-&gt;
source(audio='#a,video='#b,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>normalize</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>weights</label>
    <info>Relative weight of the sources in the sum. The empty list stands for the homogeneous distribution.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[int]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source(audio='#a,video='#b,midi=0)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>add_decoder</label>
   <info>Register an external decoder. The encoder should output in WAV format to his standard output (stdout) and read data from its standard input (stdin).</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(name:string,description:string,?mimes:[string],
 test:((string)-&gt;int),string)-&gt;unit</info>
   </section>
   <section>
    <label>name</label>
    <info>Format/decoder's name.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>description</label>
    <info>Description of the decoder.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mimes</label>
    <info>List of mime types supported by this decoder for decoding streams.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
   <section>
    <label>test</label>
    <info>Function used to determine if a file should be decoded by the decoder. Returned values are: 0: no decodable audio, -1: decodable audio but number of audio channels unknown, x: fixed number of decodable audio channels.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Process to start.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>add_metadata_resolver</label>
   <info>Register an external file metadata decoder.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,((string)-&gt;[(string*string)]))-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Format/resolver's name.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Process to start. The function takes the format and filename as argument and returns a list of (name,value) fields.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;[(string*string)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>add_oblivious_decoder</label>
   <info>Register an external file decoder. The encoder should output in WAV format to his standard output (stdout) and read data from the file it receives. The estimated remaining duration for this decoder will be unknown until the @buffer@ last seconds of the file. If possible, it is recommended to decode from stdin and use @add_decoder@.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(name:string,description:string,test:((string)-&gt;int),
 ?buffer:float,((string)-&gt;string))-&gt;unit</info>
   </section>
   <section>
    <label>name</label>
    <info>Format/decoder's name.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>description</label>
    <info>Description of the decoder.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>test</label>
    <info>Function used to determine if a file should be decoded by the decoder. Returned values are: 0: no decodable audio, -1: decodable audio but number of audio channels unknown, x: fixed number of decodable audio channels.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;int</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Process to start. The function takes the filename as argument and returns the process to start.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;string</info>
    </section>
   </section>
  </section>
  <section>
   <label>add_protocol</label>
   <info>Register a new protocol.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?temporary:bool,string,((string,float)-&gt;[string]))-&gt;unit</info>
   </section>
   <section>
    <label>temporary</label>
    <info>if true, file removed when it is finished.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string,float)-&gt;[string]</info>
    </section>
   </section>
  </section>
  <section>
   <label>add_skip_command</label>
   <info>Add a skip function to a source when it does not have one by default.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The source to attach the command to.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>add_timeout</label>
   <info>Call a function in N seconds. If the result of the function is positive or null, the task will be scheduled again after this amount of time (in seconds).</info>
   <section>
    <label>_category</label>
    <info>Control</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?fast:bool,float,(()-&gt;float))-&gt;unit</info>
   </section>
   <section>
    <label>fast</label>
    <info>Set to &lt;code&gt;false&lt;/code&gt; if the execution of the code can take long in order to lower its priority below that of request resolutions and fast timeouts. This is only effective if you set a dedicated queue for fast tasks, see the "scheduler" settings for more details.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;float</info>
    </section>
   </section>
  </section>
  <section>
   <label>amplify</label>
   <info>Multiply the amplitude of the signal.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?override:string,'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>override</label>
    <info>Specify the name of a metadata field that, when present and well-formed, overrides the amplification factor for the current track. Well-formed values are floats in decimal notation (e.g. '0.7') which are taken as normal/linear multiplicative factors; values can be passed in decibels with the suffix 'dB' (e.g. '-8.2 dB', but the spaces do not matter).</info>
    <section>
     <label>default</label>
     <info>"liq_amplify"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Multiplicative factor.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>and</label>
   <info>Return the conjunction of its arguments</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>(bool,bool)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>append</label>
   <info>Append an extra track to every track. Set the metadata 'liq_append' to 'false' to inhibit appending on one track.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?insert_missing:bool,?merge:bool,source('a),
 (([(string*string)])-&gt;source('a)))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>insert_missing</label>
    <info>Treat track beginnings without metadata as having empty one.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>merge</label>
    <info>Merge the track with its appended track.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Given the metadata, build the source producing the track to append. This source is allowed to fail (produce nothing) if no relevant track is to be appended.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>argv</label>
   <info>Get command-line parameters.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?default:string,int)-&gt;string</info>
   </section>
   <section>
    <label>default</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>at</label>
   <info>Restrict a source to play only when a predicate is true.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The predicate, typically a time interval such as &lt;code&gt;{10h-10h30}&lt;/code&gt;.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>((()-&gt;bool),source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>audio.map</label>
   <info>Map a function to all audio samples. This is SLOW!</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,((float)-&gt;float),
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(float)-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>audio_to_stereo</label>
   <info>Convert any kind of audio source into a stereo source.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=*+1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=*+1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>base64.decode</label>
   <info>Decode a Base64 encoded string.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>base64.encode</label>
   <info>Encode a string in Base64.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>basename</label>
   <info>Get the base name of a path.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>blank</label>
   <info>Produce silence and blank images.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of blank tracks in seconds, default means forever.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>bool_of_float</label>
   <info>Convert a float to a bool.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(float)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>bool_of_int</label>
   <info>Convert an int to a bool.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(int)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>bool_of_string</label>
   <info>Convert a string to a bool.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?default:bool,string)-&gt;bool</info>
   </section>
   <section>
    <label>default</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>bpm</label>
   <info>Detect the BPM.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?every:float,((float)-&gt;unit),
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>every</label>
    <info>Interval at which BPM is computed (in second).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Callback function.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(float)-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>buffer</label>
   <info>Create a buffer between two different clocks.</info>
   <section>
    <label>_category</label>
    <info>Source / Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?buffer:float,?fallible:bool,?max:float,
 ?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),?start:bool,
 source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Amount of data to pre-buffer, in seconds.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>Maximum amount of buffered data, in seconds.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>buffer.adaptative</label>
   <info>Create a buffer between two different clocks. The speed of the output is adapted so that no buffer underrun or overrun occurs. This wonderful behavior has a cost: the pitch of the sound might be changed a little.</info>
   <section>
    <label>_category</label>
    <info>Source / Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?averaging:float,?buffer:float,
 ?fallible:bool,?max:float,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?start:bool,
 source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>averaging</label>
    <info>Half-life for the averaging of the buffer size, in seconds.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Amount of data to pre-buffer, in seconds.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>Maximum amount of buffered data, in seconds.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>clip</label>
   <info>Clip sound.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>clock</label>
   <info>Assign a new clock to the given source (and to other time-dependent sources) and return the source. It is a conveniency wrapper around clock.assign_new(), allowing more concise scripts in some cases.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>sync</label>
    <info>Do not synchronize the clock on regular wallclock time, but try to run as fast as possible (CPU burning mode).</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?sync:bool,?id:string,source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>clock.assign_new</label>
   <info>Create a new clock and assign it to a list of sources.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?sync:bool,[source('a)])-&gt;unit</info>
   </section>
   <section>
    <label>id</label>
    <info>Identifier for the new clock. The default empty string means that the identifier of the first source will be used.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>sync</label>
    <info>Do not synchronize the clock on regular wallclock time, but try to run as fast as possible (CPU burning mode).</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>List of sources to which the new clock will be assigned</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>clock.unify</label>
   <info>Enforce that a list of sources all belong to the same clock.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>([source('a)])-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>comb</label>
   <info>Comb filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:float,?feedback:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Delay in seconds.</info>
    <section>
     <label>default</label>
     <info>0.001</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback coefficient in dB.</info>
    <section>
     <label>default</label>
     <info>-6.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>compand</label>
   <info>Compand the signal</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?mu:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mu</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>compress</label>
   <info>Compress the signal.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:'a,?gain:'b,?knee:'c,?ratio:float,
 ?release:'d,?rms_window:float,?threshold:'e,
 source(audio='#f,video='#g,midi='#h))-&gt;
source(audio='#f,video='#g,midi='#h)
where 'a, 'b, 'c, 'd, 'e is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Attack time (ms).</info>
    <section>
     <label>default</label>
     <info>100.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Additional gain (dB).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee</label>
    <info>Knee radius (dB).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Gain reduction ratio (n:1).</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Release time (ms).</info>
    <section>
     <label>default</label>
     <info>400.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rms_window</label>
    <info>Window for computing RMS (in sec).</info>
    <section>
     <label>default</label>
     <info>0.1</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Threshold level (dB).</info>
    <section>
     <label>default</label>
     <info>-10.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#f,video='#g,midi='#h)</info>
    </section>
   </section>
  </section>
  <section>
   <label>compress.exponential</label>
   <info>Exponential compressor.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?mu:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mu</label>
    <info>Exponential compression factor, typically greater than 1.</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>configure.default_font</label>
   <info>Liquidsoap's default font file.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>configure.libdir</label>
   <info>Liquidsoap's library directory.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>configure.logdir</label>
   <info>Liquidsoap's logging directory.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>configure.rundir</label>
   <info>Liquidsoap's PID file directory.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>cross</label>
   <info>Generic cross operator, allowing the composition of the N last seconds of a track with the beginning of the next track.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?active:bool,?conservative:bool,
 ?duration:float,?inhibit:float,?minimum:float,
 ?override:string,((source('a),source('a))-&gt;source('a)),
 source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>active</label>
    <info>The active behavior is to keep ticking the child's clock when the operator is not streaming. Otherwise the child's clock is strictly based on what is streamed off the child source, which results in time-dependent active sources to be frozen when that source is stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>Do not trust remaining time estimations, always buffering data in advance. This avoids being tricked by skips, either manual or caused by skip_blank().</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration in seconds of the crossed end of track. This value can be changed on a per-file basis using a special metadata field.</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>inhibit</label>
    <info>Minimum delay between two transitions. It is useful in order to avoid that a transition is triggered on top of another when an end-of-track occurs in the first one. Negative values mean &lt;code&gt;duration+1&lt;/code&gt;. Warning: zero inhibition can cause infinite loops.</info>
    <section>
     <label>default</label>
     <info>-1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>minimum</label>
    <info>Minimum duration (in sec.) for a cross: If the track ends without any warning (e.g. in case of skip) there may not be enough data for a decent composition. Set to 0. to avoid having transitions after skips, or more to avoid transitions on short tracks. With the negative default, transitions always occur.</info>
    <section>
     <label>default</label>
     <info>-1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_start_next"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Composition of an end of track and the next track.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(source('a),source('a))-&gt;source('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>crossfade</label>
   <info>Simple crossfade.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>Always prepare for a premature end-of-track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>start_next</label>
    <info>Duration in seconds of the crossed end of track.</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>fade_in</label>
    <info>Duration of the fade in for next track.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>fade_out</label>
    <info>Duration of the fade out for previous track.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The source to use.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?conservative:bool,?start_next:float,
 ?fade_in:float,?fade_out:float,
 source(audio='#a,video='#b,midi=0))-&gt;
source(audio='#a,video='#b,midi=0)</info>
   </section>
  </section>
  <section>
   <label>cue_cut</label>
   <info>Start track after a cue in point and stop it at cue out point. The cue points are given as metadata, in seconds from the begining of tracks.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cue_in_metadata:string,
 ?cue_out_metadata:string,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cue_in_metadata</label>
    <info>Metadata for cue in points.</info>
    <section>
     <label>default</label>
     <info>"liq_cue_in"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cue_out_metadata</label>
    <info>Metadata for cue out points.</info>
    <section>
     <label>default</label>
     <info>"liq_cue_out"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>dB_of_lin</label>
   <info>Convert linear scale into decibels.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(float)-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>delay</label>
   <info>Prevents the child from being ready again too fast after a end of track</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?initial:bool,float,source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>initial</label>
    <info>Start in unavailable state, as if a track had just finished.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The source won't be ready less than this amount of seconds after any end of track</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>dirname</label>
   <info>Get the directory name of a path.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>drop_audio</label>
   <info>Drop all audio channels of a stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio=0,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>drop_metadata</label>
   <info>Removes all metadata coming from a source.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>drop_midi</label>
   <info>Drop all midi channels of a stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>drop_video</label>
   <info>Drop all video channels of a stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video=0,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>eat_blank</label>
   <info>Eat blanks, i.e., drop the contents of the stream until it is not blank anymore.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?at_beginning:bool,?max_blank:float,
 ?min_noise:float,?threshold:float,?track_sensitive:bool,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>at_beginning</label>
    <info>Only eat at the beginning of a track.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>max_blank</label>
    <info>Maximum duration of silence allowed, in seconds.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>min_noise</label>
    <info>Minimum duration of noise required to end silence, in seconds.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Power in decibels under which the stream is considered silent.</info>
    <section>
     <label>default</label>
     <info>-40.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Reset blank counter at each track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>echo</label>
   <info>Add echo.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:'a,?feedback:'b,?ping_pong:bool,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Delay in seconds.</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback coefficient in dB (negative).</info>
    <section>
     <label>default</label>
     <info>-6.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ping_pong</label>
    <info>Use ping-pong delay.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>empty</label>
   <info>A source that does not produce anything. No silence, no track at all.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string)-&gt;source(audio='a,video='b,midi='c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>enable_external_faad_decoder</label>
   <info>Enable or disable external FAAD (AAC/AAC+/M4A) decoders.  Requires faad binary in the path for audio decoding and metaflac binary for metadata. Does not work on Win32.
Please note that built-in support for faad is available in liquidsoap if compiled and should be preferred over the external decoder.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>enable_external_flac_decoder</label>
   <info>Enable external FLAC decoders. Requires flac binary in the path for audio decoding and metaflac binary for metadata. Default: disabled.
Please note that built-in support for FLAC is available in liquidsoap if compiled and should be preferred over the external decoder.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>enable_external_mpc_decoder</label>
   <info>Enable external Musepack decoder. Requires the mpcdec binary in the path.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>enable_replaygain_metadata</label>
   <info>Enable replay gain metadata resolver. This resolver will process any file decoded by liquidsoap and add a replay_gain metadata when this value could be computed. For a finer-grained replay gain processing, use the replay_gain protocol.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>extract_replaygain</label>
    <info>The extraction program</info>
    <section>
     <label>default</label>
     <info>"/home/vagrant/.opam/system/lib/liquidsoap/lib/liquidsoap/1.2.0/extract-replaygain"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?extract_replaygain:string)-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>environment</label>
   <info>Return the process environment.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;[(string*string)]</info>
   </section>
  </section>
  <section>
   <label>eval</label>
   <info>Evaluate a string as an expression in the toplevel environment.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>exe_ext</label>
   <info>Executable file extension.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>exec_at</label>
   <info>Execute a given action when a predicate is true. This will be run in background.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>freq</label>
    <info>Frequency for checking the predicate, in seconds.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>pred</label>
    <info>Predicate indicating when to execute the function, typically a time interval such as &lt;code&gt;{10h-10h30}&lt;/code&gt;.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Function to execute when the predicate is true.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?freq:float,pred:(()-&gt;bool),(()-&gt;unit))-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>exit</label>
   <info>Immediately stop the application. This should only be used in extreme cases or to specify an exit value. The recommended way of stopping Liquidsoap is to use shutdown.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(int)-&gt;unit</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Exit value.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>fade.final</label>
   <info>Fade a stream to silence.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?override_duration:string,
 ?override_type:string,?type:string,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override_duration</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_final"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>override_type</label>
    <info>Metadata field which, if present and correct, overrides the 'type' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_type"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>fade.in</label>
   <info>Fade the beginning of tracks.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?override_duration:string,
 ?override_type:string,?type:string,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override_duration</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_in"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>override_type</label>
    <info>Metadata field which, if present and correct, overrides the 'type' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_type"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>fade.initial</label>
   <info>Fade the beginning of a stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?override_duration:string,
 ?override_type:string,?type:string,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override_duration</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_initial"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>override_type</label>
    <info>Metadata field which, if present and correct, overrides the 'type' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_type"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>fade.out</label>
   <info>Fade the end of tracks.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?override_duration:string,
 ?override_type:string,?type:string,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override_duration</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_out"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>override_type</label>
    <info>Metadata field which, if present and correct, overrides the 'type' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_fade_type"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>fail</label>
   <info>Creates a source that fails to produce anything.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string)-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>fallback</label>
   <info>At the beginning of each track, select the first ready child.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?replay_metadata:bool,?track_sensitive:bool,
 ?transitions:[(source('a),source('a))-&gt;source('a)],
 [source('a)])-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>replay_metadata</label>
    <info>Replay the last metadata of a child when switching to it in the middle of a track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Re-select only on end of tracks.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>transitions</label>
    <info>Transition functions, padded with &lt;code&gt;fun (x,y) -&gt; y&lt;/code&gt; functions.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(source('a),source('a))-&gt;source('a)]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Select the first ready source in this list.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>fallback.skip</label>
   <info>Special track insensitive fallback that always skips current song before switching.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>input</label>
    <info>The input source</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The fallback source</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(input:source('a),source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>file.contents</label>
   <info>Read the whole contents of a file.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>file.duration</label>
   <info>Compute the duration in seconds of audio data contained in a file. The computation may be expensive. Returns -1. if computation failed, typically if the file was not recognized as valid audio.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>file.exists</label>
   <info>Returns true if the file or directory exists.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>file.is_directory</label>
   <info>Returns true if the file exists and is a directory.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>file.mime_default</label>
   <info>Dummy implementation of file.mime</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>('a)-&gt;string</info>
   </section>
  </section>
  <section>
   <label>file.watch</label>
   <info>Call a function when a file is modified. Returns unwatch function.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,(()-&gt;unit))-&gt;()-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>File to watch.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Handler function.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter</label>
   <info>Perform several kinds of filtering on the signal</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,freq:'a,mode:string,?q:'b,?wetness:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>freq</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>mode</label>
    <info>Available modes are 'low' (for low-pass filter), 'high' (for high-pass filter), 'band' (for band-pass filter) and 'notch' (for notch / band-stop / band-rejection filter).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>wetness</label>
    <info>How much of the original signal should be added (1. means only filtered and 0. means only original signal).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.fir</label>
   <info>Low-pass FIR filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,beta:float,?coeffs:int,frequency:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>beta</label>
    <info>Beta should range between 0 and 1.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>coeffs</label>
    <info>Number of coefficients</info>
    <section>
     <label>default</label>
     <info>255</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency in Hz (frequency at which the response is 0.5, that is -6 dB).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.butterworth.bandpass</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency1:float,frequency2:float,?order:int,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency1</label>
    <info>First corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>frequency2</label>
    <info>Second corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>order</label>
    <info>Filter order</info>
    <section>
     <label>default</label>
     <info>4</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.butterworth.bandstop</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency1:float,frequency2:float,?order:int,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency1</label>
    <info>First corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>frequency2</label>
    <info>Second corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>order</label>
    <info>Filter order</info>
    <section>
     <label>default</label>
     <info>4</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.butterworth.high</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?order:int,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>order</label>
    <info>Filter order</info>
    <section>
     <label>default</label>
     <info>4</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.butterworth.low</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?order:int,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>order</label>
    <info>Filter order</info>
    <section>
     <label>default</label>
     <info>4</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.allpass</label>
   <info>All pass biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bandwidth:float,frequency:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bandwidth</label>
    <info>Bandwidth (in octaves)</info>
    <section>
     <label>default</label>
     <info>0.333333333333</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Center frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.bandpass</label>
   <info>Band pass biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Center frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Q</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.high</label>
   <info>High pass biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Q</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.highshelf</label>
   <info>High shelf biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?slope:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Center frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>slope</label>
    <info>Shelf slope (in dB/octave)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.low</label>
   <info>Low pass biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Q</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.lowshelf</label>
   <info>Low shelf biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?slope:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>slope</label>
    <info>Shelf slope (dB/octave)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.notch</label>
   <info>Band pass biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Center frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Q</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.eq.peak</label>
   <info>Peak EQ biquad filter.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?gain:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Center frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Gain (in dB)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Q</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.resonator.allpass</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Quality factor</info>
    <section>
     <label>default</label>
     <info>60.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.resonator.bandpass</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Quality factor</info>
    <section>
     <label>default</label>
     <info>60.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.iir.resonator.bandstop</label>
   <info>IIR filter</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:float,?q:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Corner frequency</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>q</label>
    <info>Quality factor</info>
    <section>
     <label>default</label>
     <info>60.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>filter.rc</label>
   <info>First-order filter (RC filter).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,mode:string,rc:'a,?wetness:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mode</label>
    <info>Available modes are 'low' (for low-pass filter), 'high' (for high-pass filter).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>rc</label>
    <info>Time constant (in seconds).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>wetness</label>
    <info>How much of the original signal should be added (1. means only filtered and 0. means only original signal).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>flanger</label>
   <info>Flanger effect.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:float,?feedback:'a,?freq:'b,?phase:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Delay in seconds.</info>
    <section>
     <label>default</label>
     <info>0.001</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback coefficient in dB.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>freq</label>
    <info>Frequency in Hz.</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>phase</label>
    <info>Phase difference between channels in radians.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>float_of_int</label>
   <info>Convert an int to a float.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(int)-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>float_of_string</label>
   <info>Convert a string to a float.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?default:float,string)-&gt;float</info>
   </section>
   <section>
    <label>default</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>fst</label>
   <info>Get the first component of a pair.</info>
   <section>
    <label>_category</label>
    <info>Pair</info>
   </section>
   <section>
    <label>_type</label>
    <info>(('a*'b))-&gt;'a</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a*'b)</info>
    </section>
   </section>
  </section>
  <section>
   <label>garbage_collect</label>
   <info>Trigger full major garbage collection.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>get</label>
   <info>Get a setting's value.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(default:'a,string)-&gt;'a
where 'a is bool, int, float, string or [string]</info>
   </section>
   <section>
    <label>default</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is bool, int, float, string or [string]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>get_clock_status</label>
   <info>Get the current time for all allocated clocks.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;[(string*int)]</info>
   </section>
  </section>
  <section>
   <label>get_mime</label>
   <info>Generic mime test. First try to use file.mime if it exist.  Otherwise try to get the value using the file binary. Returns "" (empty string) if no value can be found.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The file to test</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
  </section>
  <section>
   <label>get_process_lines</label>
   <info>Perform a shell call and return the list of its output lines.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;[string]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>get_process_output</label>
   <info>Perform a shell call and return its output.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>getenv</label>
   <info>Get the value associated to a variable in the process environment. Return "" if variable is not set.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>getopt</label>
   <info>Parse command line options:
&lt;code&gt;getopt("-o")&lt;/code&gt; returns "1" if "-o" was passed without any parameter, "0" otherwise.
&lt;code&gt;getopt(default="X","-o")&lt;/code&gt; returns "Y" if "-o Y" was passed, "X" otherwise.
The result is removed from the list of arguments, affecting subsequent
calls to &lt;code&gt;argv()&lt;/code&gt; and &lt;code&gt;getopt()&lt;/code&gt;.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?default:string,string)-&gt;string</info>
   </section>
   <section>
    <label>default</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>getpid</label>
   <info>Get the process' pid.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;int</info>
   </section>
  </section>
  <section>
   <label>gettimeofday</label>
   <info>Return the current time since 00:00:00 GMT, Jan. 1, 1970, in seconds.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;float</info>
   </section>
  </section>
  <section>
   <label>harbor.http.register</label>
   <info>Register a HTTP handler on the harbor. The given function receives as argument the full requested uri (e.g. "foo?var=bar"), http protocol version, possible input data and the list of HTTP headers and returns the answer sent to the client, including HTTP headers. Registered uri can be regular expressions (e.g. ".+\.php") and can override default metadata handlers.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(port:int,method:string,string,
 ((protocol:string,data:string,headers:[(string*string)],
   string)-&gt;string))-&gt;unit</info>
   </section>
   <section>
    <label>port</label>
    <info>Port to server.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>method</label>
    <info>Accepted method</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>URI to serve.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Function to execute. method argument is "PUT" or "GET", protocol argument is "HTTP/1.1" or "HTTP/1.0" etc., data argument contains data passed in case of a PUT request, and "" otherwise. headers argument contains the HTTP headers. Unlabeled argument contains the requested URI.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(protocol:string,data:string,headers:[(string*string)],
 string)-&gt;string</info>
    </section>
   </section>
  </section>
  <section>
   <label>harbor.http.remove</label>
   <info>Remove a registered HTTP handler on the harbor.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(method:string,port:int,string)-&gt;unit</info>
   </section>
   <section>
    <label>method</label>
    <info>Method served.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>Port to server.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>URI served.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>helium</label>
   <info>Increases the pitch, making voices sound like on helium.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The input source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
  </section>
  <section>
   <label>http.get</label>
   <info>Perform a full Http GET request and return (status,headers),data.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?headers:[(string*string)],?timeout:float,string)-&gt;
((((string*int)*string)*[(string*string)])*string)</info>
   </section>
   <section>
    <label>headers</label>
    <info>Additional headers.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout for network operations.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Requested URL, e.g. "http://www.google.com:80/index.html".</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>http.post</label>
   <info>Perform a full Http POST request and return (status,headers),data.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?data:string,?headers:[(string*string)],?timeout:float,
 string)-&gt;
((((string*int)*string)*[(string*string)])*string)</info>
   </section>
   <section>
    <label>data</label>
    <info>Http POST data.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>headers</label>
    <info>Additional headers.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout for network operations.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Requested URL, e.g. "http://www.google.com:80/index.html".</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>http_codes</label>
   <info>List of HTTP response codes and statuses.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>[(string*string)]</info>
   </section>
  </section>
  <section>
   <label>http_response</label>
   <info>Create a HTTP response string</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>protocol</label>
    <info>HTTP protocol used.</info>
    <section>
     <label>default</label>
     <info>"HTTP/1.1"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>code</label>
    <info>Response code.</info>
    <section>
     <label>default</label>
     <info>200</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>headers</label>
    <info>Response headers.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>data</label>
    <info>Response data</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?protocol:string,?code:int,?headers:[(string*string)],
 ?data:string)-&gt;string</info>
   </section>
  </section>
  <section>
   <label>icy.update_metadata</label>
   <info>Update metata on an icecast mountpoint using the ICY protocol.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?host:string,?port:int,?user:string,?password:string,
 mount:string,?protocol:string,?encoding:string,
 ?headers:[(string*string)],[(string*string)])-&gt;unit</info>
   </section>
   <section>
    <label>host</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"localhost"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>8000</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>user</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"source"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>password</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"hackme"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mount</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>protocol</label>
    <info>Protocol to use. One of: "icy" or "http"</info>
    <section>
     <label>default</label>
     <info>"http"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>encoding</label>
    <info>Encoding used to send metadata, default (UTF-8) if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>headers</label>
    <info>Additional headers.</info>
    <section>
     <label>default</label>
     <info>[("User-Agent","Liquidsoap/1.2.0 (Unix; OCaml 4.02.3)")]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>id</label>
   <info>Does not do anything, simply forwards its input stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>if</label>
   <info>The basic conditional.</info>
   <section>
    <label>_category</label>
    <info>Control</info>
   </section>
   <section>
    <label>_type</label>
    <info>(bool,then:(()-&gt;'a),else:(()-&gt;'a))-&gt;'a</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>then</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;'a</info>
    </section>
   </section>
   <section>
    <label>else</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;'a</info>
    </section>
   </section>
  </section>
  <section>
   <label>ignore</label>
   <info>Convert anything to unit, preventing warnings.</info>
   <section>
    <label>_category</label>
    <info>Control</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a)-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
  </section>
  <section>
   <label>in</label>
   <info>Create a source from the first available input driver in pulseaudio, portaudio, oss, alsa, blank.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?start:bool,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?fallible:bool)-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>input.alsa</label>
   <info>Stream from an ALSA input device.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bufferize:bool,?clock_safe:bool,
 ?device:string,?fallible:bool,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?start:bool)-&gt;
active_source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bufferize</label>
    <info>Bufferize input</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>clock_safe</label>
    <info>Force the use of the dedicated ALSA clock</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>device</label>
    <info>Alsa device to use</info>
    <section>
     <label>default</label>
     <info>"default"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the input to stop. When false, the source will be infallible but the stop command won't have any effect.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when input starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when input stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Start input as soon as it is created. Disabling it is only taken into account for a fallible input.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.external</label>
   <info>Stream data from an external application.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?buffer:float,?channels:int,?max:float,
 ?restart:bool,?restart_on_error:bool,?samplerate:int,
 string)-&gt;source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Duration of the pre-buffered data.</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>channels</label>
    <info>Number of channels.</info>
    <section>
     <label>default</label>
     <info>2</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>Maximum duration of the buffered data.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>restart</label>
    <info>Restart process when exited.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>restart_on_error</label>
    <info>Restart process when exited with error.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>samplerate</label>
    <info>Samplerate.</info>
    <section>
     <label>default</label>
     <info>44100</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Command to execute.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.harbor</label>
   <info>Retrieves the given http stream from the harbor.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?auth:((string,string)-&gt;bool),?buffer:float,
 ?debug:bool,?dumpfile:string,?icy:bool,
 ?icy_metadata_charset:string,?logfile:string,?max:float,
 ?metadata_charset:string,
 ?on_connect:(([(string*string)])-&gt;unit),
 ?on_disconnect:(()-&gt;unit),?password:string,?port:int,
 ?timeout:float,?user:string,string)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>auth</label>
    <info>Authentication function. &lt;code&gt;f(login,password)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the user should be granted access for this login. Override any other method if used.</info>
    <section>
     <label>default</label>
     <info>fun (_,_) -&gt; false</info>
    </section>
    <section>
     <label>type</label>
     <info>(string,string)-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Duration of the pre-buffered data.</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>debug</label>
    <info>Run in debugging mode by not catching some exceptions.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>dumpfile</label>
    <info>Dump stream to file, for debugging purpose. Disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>icy</label>
    <info>Enable ICY (shoutcast) protocol.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>icy_metadata_charset</label>
    <info>ICY (shoutcast) metadata charset. Guessed if empty. Default for shoutcast is ISO-8859-1. Set to that value if all your clients send metadata using this charset and automatic detection is not working for you.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>logfile</label>
    <info>Log buffer status to file, for debugging purpose. Disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>Maximum duration of the buffered data.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>metadata_charset</label>
    <info>Metadata charset for non-ICY (shoutcast) source protocols. Guessed if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>on_connect</label>
    <info>Function to execute when a source is connected. Its receives the list of headers, of the form: (&lt;label&gt;,&lt;value&gt;). All labels are lowercase.</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; ()</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_disconnect</label>
    <info>Functions to excecute when a source is disconnected</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>password</label>
    <info>Source password.</info>
    <section>
     <label>default</label>
     <info>"hackme"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>Port used to connect to the source.</info>
    <section>
     <label>default</label>
     <info>8005</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout for source connectionn.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>user</label>
    <info>Source user.</info>
    <section>
     <label>default</label>
     <info>"source"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Mountpoint to look for.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.http</label>
   <info>Forwards the given http stream. The relay can be paused/resumed using the start/stop telnet commands.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?autostart:bool,?bind_address:string,
 ?buffer:float,?debug:bool,?force_mime:string,
 ?logfile:string,?max:float,?new_track_on_metadata:bool,
 ?on_connect:(([(string*string)])-&gt;unit),
 ?on_disconnect:(()-&gt;unit),?playlist_mode:string,
 ?poll_delay:float,?timeout:float,?user_agent:string,
 string)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>autostart</label>
    <info>Initially start relaying or not.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>bind_address</label>
    <info>Address to bind on the local machine. This option can be useful if your machine is bound to multiple IPs. Empty means no bind address.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Duration of the pre-buffered data.</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>debug</label>
    <info>Run in debugging mode, not catching some exceptions.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>force_mime</label>
    <info>Force mime data type. Not used if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>logfile</label>
    <info>Log buffer status to file, for debugging purpose. Disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>Maximum duration of the buffered data.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>new_track_on_metadata</label>
    <info>Treat new metadata as new track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_connect</label>
    <info>Function to execute when a source is connected. Its receives the list of headers, of the form: (&lt;label&gt;,&lt;value&gt;). All labels are lowercase.</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; ()</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_disconnect</label>
    <info>Function to excecute when a source is disconnected</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>playlist_mode</label>
    <info>Valid modes are "normal", "random", "randomize" and "first". The first ones have the same meaning as for the mode parameter of the playlist operator. The last one discards all entries but the first one.</info>
    <section>
     <label>default</label>
     <info>"normal"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>poll_delay</label>
    <info>Polling delay when trying to connect to the stream.</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout for source connectionn.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>user_agent</label>
    <info>User agent.</info>
    <section>
     <label>default</label>
     <info>"Liquidsoap/1.2.0 (Unix; OCaml 4.02.3)"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>URL of an http stream (default port is 80).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.keyboard</label>
   <info>Play notes from the keyboard.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string)-&gt;source(audio='#a,video=0,midi='#b+1)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.mplayer</label>
   <info>Stream data from mplayer</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"input.mplayer"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>restart</label>
    <info>restart on exit.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>restart_on_error</label>
    <info>restart on exit with error.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Duration of the pre-buffered data.</info>
    <section>
     <label>default</label>
     <info>0.2</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>Maximum duration of the buffered data.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>data URI.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?restart:bool,?restart_on_error:bool,
 ?buffer:float,?max:float,string)-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
  </section>
  <section>
   <label>input.oss</label>
   <info>Stream from an OSS input device.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?clock_safe:bool,?device:string,
 ?fallible:bool,?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),
 ?start:bool)-&gt;active_source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>clock_safe</label>
    <info>Force the use of the dedicated OSS clock.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>device</label>
    <info>OSS device to use.</info>
    <section>
     <label>default</label>
     <info>"/dev/dsp"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the input to stop. When false, the source will be infallible but the stop command won't have any effect.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when input starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when input stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Start input as soon as it is created. Disabling it is only taken into account for a fallible input.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.pulseaudio</label>
   <info>Stream from a portaudio input device.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?client:string,?clock_safe:bool,
 ?device:string,?fallible:bool,?fallible:bool,
 ?on_start:(()-&gt;unit),?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?on_stop:(()-&gt;unit),?start:bool,
 ?start:bool)-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>client</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"liquidsoap"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>clock_safe</label>
    <info>Force the use of the dedicated Pulseaudio clock.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>device</label>
    <info>Device to use. Uses default if set to "".</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the input to stop. When false, the source will be infallible but the stop command won't have any effect.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when input starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when input stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Start input as soon as it is created. Disabling it is only taken into account for a fallible input.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>input.udp</label>
   <info>Input encoded data from UDP, without any control whatsoever.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?buffer:float,host:string,port:int,string)-&gt;
active_source('a)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Duration of buffered data before starting playout.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>host</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Mime type.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>insert_metadata</label>
   <info>Dynamically insert metadata in a stream. Returns a pair (f,s) where s is a new source and f is a function of type (metadata)-&gt;unit, used to insert metadata in s.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source('a))-&gt;
((([(string*string)])-&gt;unit)*source('a))</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>int_of_float</label>
   <info>Convert a float to a int.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(float)-&gt;int</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>int_of_string</label>
   <info>Convert a string to a int.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?default:int,string)-&gt;int</info>
   </section>
   <section>
    <label>default</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>interactive.bool</label>
   <info>Read a boolean from an interactive input.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,bool)-&gt;()-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>interactive.float</label>
   <info>Read a float from an interactive input.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,float)-&gt;()-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>interactive.string</label>
   <info>Read a string from an interactive input.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,string)-&gt;()-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>is_directory</label>
   <info>Returns true if the directory exists.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>json_of</label>
   <info>Convert a value to a json string.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?compact:bool,'a)-&gt;string</info>
   </section>
   <section>
    <label>compact</label>
    <info>Output compact text.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.alias</label>
   <info>Aliasing by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?aliasing_level:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>aliasing_level</label>
    <info>Aliasing level (0 &lt;= &lt;code&gt;aliasing_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.allpass_c</label>
   <info>Allpass delay line, cubic spline interpolation by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,delay_time:'b,max_delay:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.allpass_l</label>
   <info>Allpass delay line, linear interpolation by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,delay_time:'b,max_delay:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.allpass_n</label>
   <info>Allpass delay line, noninterpolating by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,delay_time:'b,max_delay:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.amp</label>
   <info>Simple amplifier by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amps_gain:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amps_gain</label>
    <info>Amps gain (dB) (-70 &lt;= &lt;code&gt;amps_gain&lt;/code&gt; &lt;= 70).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.amp_mono</label>
   <info>Mono Amplifier by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?gain:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Gain (0 &lt;= &lt;code&gt;gain&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.amp_stereo</label>
   <info>Stereo Amplifier by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?gain:'a,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Gain (0 &lt;= &lt;code&gt;gain&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.ampitchshift</label>
   <info>AM pitchshifter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?buffer_size:int,?pitch_shift:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>buffer_size</label>
    <info>Buffer size (1 &lt;= &lt;code&gt;buffer_size&lt;/code&gt; &lt;= 7).</info>
    <section>
     <label>default</label>
     <info>4</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>pitch_shift</label>
    <info>Pitch shift (0.25 &lt;= &lt;code&gt;pitch_shift&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.analogueosc</label>
   <info>Analogue Oscillator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?frequency:'a,?instability:'b,?warmth:'c,
 ?waveform:int)-&gt;source(audio=1,video=0,midi=0)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Frequency (Hz) (0.0441 &lt;= &lt;code&gt;frequency&lt;/code&gt; &lt;= 22005.9).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>instability</label>
    <info>Instability (0 &lt;= &lt;code&gt;instability&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>warmth</label>
    <info>Warmth (0 &lt;= &lt;code&gt;warmth&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>waveform</label>
    <info>Waveform (1=sin, 2=tri, 3=squ, 4=saw) (1 &lt;= &lt;code&gt;waveform&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.artificiallatency</label>
   <info>Artificial latency by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Delay (ms) (0 &lt;= &lt;code&gt;delay&lt;/code&gt; &lt;= 10000).</info>
    <section>
     <label>default</label>
     <info>2500.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.autophaser</label>
   <info>Auto phaser by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?decay_time:'b,?feedback:'c,
 ?modulation_depth:'d,?spread:'e,
 source(audio='#f,video='#g,midi='#h))-&gt;
source(audio='#f,video='#g,midi='#h)
where 'a, 'b, 'c, 'd, 'e is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (s) (0 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (-1 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>modulation_depth</label>
    <info>Modulation depth (0 &lt;= &lt;code&gt;modulation_depth&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>spread</label>
    <info>Spread (octaves) (0 &lt;= &lt;code&gt;spread&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#f,video='#g,midi='#h)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.bandpass_a_iir</label>
   <info>Glame Bandpass Analog Filter by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bandwidth:'a,?center_frequency:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bandwidth</label>
    <info>Bandwidth (Hz) (4.41 &lt;= &lt;code&gt;bandwidth&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>295.831787109</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>center_frequency</label>
    <info>Center Frequency (Hz) (4.41 &lt;= &lt;code&gt;center_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>36.1194992065</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.bandpass_iir</label>
   <info>Glame Bandpass Filter by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bandwidth:'a,?center_frequency:'b,
 ?stages:int,source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bandwidth</label>
    <info>Bandwidth (Hz) (4.41 &lt;= &lt;code&gt;bandwidth&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>295.831787109</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>center_frequency</label>
    <info>Center Frequency (Hz) (4.41 &lt;= &lt;code&gt;center_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>295.831787109</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>stages</label>
    <info>Stages(2 poles per stage) (1 &lt;= &lt;code&gt;stages&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.bodeshifter</label>
   <info>Bode frequency shifter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?frequency_shift:'a,
 source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency_shift</label>
    <info>Frequency shift (0 &lt;= &lt;code&gt;frequency_shift&lt;/code&gt; &lt;= 5000).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.bodeshiftercv</label>
   <info>Bode frequency shifter (CV) by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?base_shift:'a,?cv_attenuation:'b,?mix:'c,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=3,video=0,midi=0)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>base_shift</label>
    <info>Base shift (0 &lt;= &lt;code&gt;base_shift&lt;/code&gt; &lt;= 5000).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>cv_attenuation</label>
    <info>CV Attenuation (0 &lt;= &lt;code&gt;cv_attenuation&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>mix</label>
    <info>Mix (-1=down, +1=up) (-1 &lt;= &lt;code&gt;mix&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.butthigh_iir</label>
   <info>GLAME Butterworth Highpass by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,?resonance:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (Hz) (4.41 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>36.1194992065</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>resonance</label>
    <info>Resonance (0.1 &lt;= &lt;code&gt;resonance&lt;/code&gt; &lt;= 1.41).</info>
    <section>
     <label>default</label>
     <info>0.754999995232</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.buttlow_iir</label>
   <info>GLAME Butterworth Lowpass by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,?resonance:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (Hz) (4.41 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>36.1194992065</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>resonance</label>
    <info>Resonance (0.1 &lt;= &lt;code&gt;resonance&lt;/code&gt; &lt;= 1.41).</info>
    <section>
     <label>default</label>
     <info>0.754999995232</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.bwxover_iir</label>
   <info>Glame Butterworth X-over Filter by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,?resonance:'b,
 source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (Hz) (4.41 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>36.1194992065</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>resonance</label>
    <info>Resonance (0.1 &lt;= &lt;code&gt;resonance&lt;/code&gt; &lt;= 1.41).</info>
    <section>
     <label>default</label>
     <info>0.754999995232</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.chebstortion</label>
   <info>Chebyshev distortion by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?distortion:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>distortion</label>
    <info>Distortion (0 &lt;= &lt;code&gt;distortion&lt;/code&gt; &lt;= 3).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.comb</label>
   <info>Comb Filter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?band_separation:'a,?feedback:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>band_separation</label>
    <info>Band separation (Hz) (16 &lt;= &lt;code&gt;band_separation&lt;/code&gt; &lt;= 640).</info>
    <section>
     <label>default</label>
     <info>172.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (-0.99 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 0.99).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.comb_c</label>
   <info>Comb delay line, cubic spline interpolation by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,delay_time:'b,max_delay:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.comb_l</label>
   <info>Comb delay line, linear interpolation by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,delay_time:'b,max_delay:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.comb_n</label>
   <info>Comb delay line, noninterpolating by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,delay_time:'b,max_delay:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.combsplitter</label>
   <info>Comb Splitter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?band_separation:'a,
 source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>band_separation</label>
    <info>Band separation (Hz) (16 &lt;= &lt;code&gt;band_separation&lt;/code&gt; &lt;= 640).</info>
    <section>
     <label>default</label>
     <info>172.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.const</label>
   <info>Constant Signal Generator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?signal_amplitude:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>signal_amplitude</label>
    <info>Signal amplitude (-1 &lt;= &lt;code&gt;signal_amplitude&lt;/code&gt; &lt;= 1.1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.crossoverdist</label>
   <info>Crossover distortion by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?crossover_amplitude:'a,?smoothing:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>crossover_amplitude</label>
    <info>Crossover amplitude (0 &lt;= &lt;code&gt;crossover_amplitude&lt;/code&gt; &lt;= 0.1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>smoothing</label>
    <info>Smoothing (0 &lt;= &lt;code&gt;smoothing&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.dcremove</label>
   <info>DC Offset Remover by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.decay</label>
   <info>Exponential signal decay by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,decay_time:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay Time (s) (0 &lt;= &lt;code&gt;decay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.decimator</label>
   <info>Decimator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bit_depth:'a,?sample_rate:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bit_depth</label>
    <info>Bit depth (1 &lt;= &lt;code&gt;bit_depth&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>24.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>sample_rate</label>
    <info>Sample rate (Hz) (44.1 &lt;= &lt;code&gt;sample_rate&lt;/code&gt; &lt;= 44100).</info>
    <section>
     <label>default</label>
     <info>44100.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.declip</label>
   <info>Declipper by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.delay_5s</label>
   <info>Simple Delay Line by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:'a,?dry_wet_balance:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Delay (Seconds) (0 &lt;= &lt;code&gt;delay&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_wet_balance</label>
    <info>Dry/Wet Balance (0 &lt;= &lt;code&gt;dry_wet_balance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.delay_c</label>
   <info>Simple delay line, cubic spline interpolation by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,delay_time:'a,max_delay:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.delay_l</label>
   <info>Simple delay line, linear interpolation by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,delay_time:'a,max_delay:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.delay_n</label>
   <info>Simple delay line, noninterpolating by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,delay_time:'a,max_delay:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_delay</label>
    <info>Max Delay (s) (0 &lt;= &lt;code&gt;max_delay&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.delayorama</label>
   <info>Delayorama by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude_change:'a,?amplitude_random:'b,
 ?delay_change:'c,?delay_random:'d,?delay_range:'e,
 ?dry_wet_mix:'f,?feedback:'g,?first_delay:'h,
 ?input_gain:'i,?number_of_taps:int,?random_seed:int,
 source(audio='#j,video='#k,midi='#l))-&gt;
source(audio='#j,video='#k,midi='#l)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude_change</label>
    <info>Amplitude change (0.2 &lt;= &lt;code&gt;amplitude_change&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>amplitude_random</label>
    <info>Amplitude random (%) (0 &lt;= &lt;code&gt;amplitude_random&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_change</label>
    <info>Delay change (0.2 &lt;= &lt;code&gt;delay_change&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_random</label>
    <info>Delay random (%) (0 &lt;= &lt;code&gt;delay_random&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_range</label>
    <info>Delay range (s) (0.0001 &lt;= &lt;code&gt;delay_range&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>6.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_wet_mix</label>
    <info>Dry/wet mix (0 &lt;= &lt;code&gt;dry_wet_mix&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (%) (0 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>first_delay</label>
    <info>First delay (s) (0 &lt;= &lt;code&gt;first_delay&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>input_gain</label>
    <info>Input gain (dB) (-96 &lt;= &lt;code&gt;input_gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>number_of_taps</label>
    <info>Number of taps (2 &lt;= &lt;code&gt;number_of_taps&lt;/code&gt; &lt;= 128).</info>
    <section>
     <label>default</label>
     <info>2</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>random_seed</label>
    <info>Random seed (0 &lt;= &lt;code&gt;random_seed&lt;/code&gt; &lt;= 1000).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#j,video='#k,midi='#l)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.diode</label>
   <info>Diode Processor by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?mode:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mode</label>
    <info>Mode (0 for none, 1 for half wave, 2 for full wave) (0 &lt;= &lt;code&gt;mode&lt;/code&gt; &lt;= 3).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.divider</label>
   <info>Audio Divider (Suboctave Generator) by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?denominator:int,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>denominator</label>
    <info>Denominator (1 &lt;= &lt;code&gt;denominator&lt;/code&gt; &lt;= 8).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.dj_eq</label>
   <info>DJ EQ by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?hi_gain:'a,?lo_gain:'b,?mid_gain:'c,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>hi_gain</label>
    <info>Hi gain (dB) (-70 &lt;= &lt;code&gt;hi_gain&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lo_gain</label>
    <info>Lo gain (dB) (-70 &lt;= &lt;code&gt;lo_gain&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>mid_gain</label>
    <info>Mid gain (dB) (-70 &lt;= &lt;code&gt;mid_gain&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.dj_eq_mono</label>
   <info>DJ EQ (mono) by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?hi_gain:'a,?lo_gain:'b,?mid_gain:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>hi_gain</label>
    <info>Hi gain (dB) (-70 &lt;= &lt;code&gt;hi_gain&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lo_gain</label>
    <info>Lo gain (dB) (-70 &lt;= &lt;code&gt;lo_gain&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>mid_gain</label>
    <info>Mid gain (dB) (-70 &lt;= &lt;code&gt;mid_gain&lt;/code&gt; &lt;= 6).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.djflanger</label>
   <info>DJ flanger by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?feedback:'a,?lfo_depth:'b,?lfo_period:'c,
 lfo_sync:'d,source(audio='#e,video='#f,midi='#g))-&gt;
source(audio='#e,video='#f,midi='#g)
where 'a, 'b, 'c, 'd is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (%) (-100 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_depth</label>
    <info>LFO depth (ms) (1 &lt;= &lt;code&gt;lfo_depth&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>4.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_period</label>
    <info>LFO period (s) (0.1 &lt;= &lt;code&gt;lfo_period&lt;/code&gt; &lt;= 32).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_sync</label>
    <info>LFO sync.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#e,video='#f,midi='#g)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.dysoncompress</label>
   <info>Dyson compressor by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?compression_ratio:'a,
 ?fast_compression_ratio:'b,?peak_limit:'c,
 ?release_time:'d,source(audio='#e,video='#f,midi='#g))-&gt;
source(audio='#e,video='#f,midi='#g)
where 'a, 'b, 'c, 'd is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>compression_ratio</label>
    <info>Compression ratio (0 &lt;= &lt;code&gt;compression_ratio&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>fast_compression_ratio</label>
    <info>Fast compression ratio (0 &lt;= &lt;code&gt;fast_compression_ratio&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>peak_limit</label>
    <info>Peak limit (dB) (-30 &lt;= &lt;code&gt;peak_limit&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (s) (0 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#e,video='#f,midi='#g)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.faddelay</label>
   <info>Fractionally Addressed Delay Line by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:'a,?feedback:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Delay (seconds) (0.1 &lt;= &lt;code&gt;delay&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (dB) (-70 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.fastlookaheadlimiter</label>
   <info>Fast Lookahead limiter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?input_gain:'a,?limit:'b,?release_time:'c,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>input_gain</label>
    <info>Input gain (dB) (-20 &lt;= &lt;code&gt;input_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>limit</label>
    <info>Limit (dB) (-20 &lt;= &lt;code&gt;limit&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (s) (0.01 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.507499992847</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.flanger</label>
   <info>Flanger by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay_base:'a,?feedback:'b,
 ?lfo_frequency:'c,?max_slowdown:'d,
 source(audio='#e,video='#f,midi='#g))-&gt;
source(audio='#e,video='#f,midi='#g)
where 'a, 'b, 'c, 'd is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay_base</label>
    <info>Delay base (ms) (0.1 &lt;= &lt;code&gt;delay_base&lt;/code&gt; &lt;= 25).</info>
    <section>
     <label>default</label>
     <info>6.32499980927</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (-1 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_frequency</label>
    <info>LFO frequency (Hz) (0.05 &lt;= &lt;code&gt;lfo_frequency&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.334370166063</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>max_slowdown</label>
    <info>Max slowdown (ms) (0 &lt;= &lt;code&gt;max_slowdown&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>2.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#e,video='#f,midi='#g)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.fmosc</label>
   <info>FM Oscillator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?waveform:int,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>waveform</label>
    <info>Waveform (1=sin, 2=tri, 3=squ, 4=saw) (1 &lt;= &lt;code&gt;waveform&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.foldover</label>
   <info>Foldover distortion by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?drive:'a,?skew:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>drive</label>
    <info>Drive (0 &lt;= &lt;code&gt;drive&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>skew</label>
    <info>Skew (0 &lt;= &lt;code&gt;skew&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.fourbyfourpole</label>
   <info>4 x 4 pole allpass by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?feedback_1:'a,?feedback_2:'b,?feedback_3:'c,
 ?feedback_4:'d,?frequency_1:'e,?frequency_2:'f,
 ?frequency_3:'g,?frequency_4:'h,
 source(audio='#i,video='#j,midi='#k))-&gt;
source(audio='#i,video='#j,midi='#k)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>feedback_1</label>
    <info>Feedback 1 (-1 &lt;= &lt;code&gt;feedback_1&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback_2</label>
    <info>Feedback 2 (-1 &lt;= &lt;code&gt;feedback_2&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback_3</label>
    <info>Feedback 3 (-1 &lt;= &lt;code&gt;feedback_3&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback_4</label>
    <info>Feedback 4 (-1 &lt;= &lt;code&gt;feedback_4&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>frequency_1</label>
    <info>Frequency 1 (1 &lt;= &lt;code&gt;frequency_1&lt;/code&gt; &lt;= 20000).</info>
    <section>
     <label>default</label>
     <info>5000.75</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>frequency_2</label>
    <info>Frequency 2 (1 &lt;= &lt;code&gt;frequency_2&lt;/code&gt; &lt;= 20000).</info>
    <section>
     <label>default</label>
     <info>10000.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>frequency_3</label>
    <info>Frequency 3 (1 &lt;= &lt;code&gt;frequency_3&lt;/code&gt; &lt;= 20000).</info>
    <section>
     <label>default</label>
     <info>15000.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>frequency_4</label>
    <info>Frequency 4 (1 &lt;= &lt;code&gt;frequency_4&lt;/code&gt; &lt;= 20000).</info>
    <section>
     <label>default</label>
     <info>20000.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#i,video='#j,midi='#k)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.foverdrive</label>
   <info>Fast overdrive by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?drive_level:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>drive_level</label>
    <info>Drive level (1 &lt;= &lt;code&gt;drive_level&lt;/code&gt; &lt;= 3).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.freqtracker</label>
   <info>Frequency tracker by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?tracking_speed:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>tracking_speed</label>
    <info>Tracking speed (0 &lt;= &lt;code&gt;tracking_speed&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.gate</label>
   <info>Gate by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:'a,?decay:'b,?hf_key_filter:'c,
 ?hold:'d,?lf_key_filter:'e,?output_select:int,?range:'f,
 ?threshold:'g,source(audio='#h,video='#i,midi='#j))-&gt;
source(audio='#h,video='#i,midi='#j)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Attack (ms) (0.01 &lt;= &lt;code&gt;attack&lt;/code&gt; &lt;= 1000).</info>
    <section>
     <label>default</label>
     <info>250.007507324</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Decay (ms) (2 &lt;= &lt;code&gt;decay&lt;/code&gt; &lt;= 4000).</info>
    <section>
     <label>default</label>
     <info>2001.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>hf_key_filter</label>
    <info>HF key filter (Hz) (220.5 &lt;= &lt;code&gt;hf_key_filter&lt;/code&gt; &lt;= 21609).</info>
    <section>
     <label>default</label>
     <info>21609.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>hold</label>
    <info>Hold (ms) (2 &lt;= &lt;code&gt;hold&lt;/code&gt; &lt;= 2000).</info>
    <section>
     <label>default</label>
     <info>1500.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lf_key_filter</label>
    <info>LF key filter (Hz) (30.87 &lt;= &lt;code&gt;lf_key_filter&lt;/code&gt; &lt;= 4410).</info>
    <section>
     <label>default</label>
     <info>30.8699989319</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>output_select</label>
    <info>Output select (-1 = key listen, 0 = gate, 1 = bypass) (-1 &lt;= &lt;code&gt;output_select&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>range</label>
    <info>Range (dB) (-90 &lt;= &lt;code&gt;range&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-90.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Threshold (dB) (-70 &lt;= &lt;code&gt;threshold&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#h,video='#i,midi='#j)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.giantflange</label>
   <info>Giant flange by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay_1_range:'a,?delay_2_range:'b,
 double_delay:'c,?dry_wet_level:'d,?feedback:'e,
 ?lfo_frequency_1:'f,?lfo_frequency_2:'g,
 source(audio='#h,video='#i,midi='#j))-&gt;
source(audio='#h,video='#i,midi='#j)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay_1_range</label>
    <info>Delay 1 range (s) (0 &lt;= &lt;code&gt;delay_1_range&lt;/code&gt; &lt;= 10.5).</info>
    <section>
     <label>default</label>
     <info>2.625</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay_2_range</label>
    <info>Delay 2 range (s) (0 &lt;= &lt;code&gt;delay_2_range&lt;/code&gt; &lt;= 10.5).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>double_delay</label>
    <info>Double delay.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_wet_level</label>
    <info>Dry/Wet level (0 &lt;= &lt;code&gt;dry_wet_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (-100 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_frequency_1</label>
    <info>LFO frequency 1 (Hz) (0 &lt;= &lt;code&gt;lfo_frequency_1&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_frequency_2</label>
    <info>LFO frequency 2 (Hz) (0 &lt;= &lt;code&gt;lfo_frequency_2&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#h,video='#i,midi='#j)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.gong</label>
   <info>Gong model by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?inner_damping:'a,?inner_size_1:'b,
 ?inner_size_2:'c,?inner_size_3:'d,?inner_size_4:'e,
 ?inner_stiffness_1:'f,?inner_stiffness_1__:'g,
 ?inner_stiffness_2:'h,?inner_stiffness_2__:'i,
 ?inner_stiffness_3:'j,?inner_stiffness_3__:'k,
 ?inner_stiffness_4:'l,?inner_stiffness_4__:'m,
 ?mic_position:'n,?outer_damping:'o,?outer_size_1:'p,
 ?outer_size_2:'q,?outer_size_3:'r,?outer_size_4:'s,
 ?outer_stiffness_1:'t,?outer_stiffness_1__:'u,
 ?outer_stiffness_2:'v,?outer_stiffness_2__:'w,
 ?outer_stiffness_3:'x,?outer_stiffness_3__:'y,
 ?outer_stiffness_4:'z,?outer_stiffness_4__:'aa,
 source(audio='#ab,video='#ac,midi='#ad))-&gt;
source(audio='#ab,video='#ac,midi='#ad)
where
  'a, 'aa, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o, 'p, 'q, 'r, 's, 't, 'u, 'v, 'w, 'x, 'y, 'z is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>inner_damping</label>
    <info>Inner damping (0 &lt;= &lt;code&gt;inner_damping&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_size_1</label>
    <info>Inner size 1 (0 &lt;= &lt;code&gt;inner_size_1&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_size_2</label>
    <info>Inner size 2 (0 &lt;= &lt;code&gt;inner_size_2&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_size_3</label>
    <info>Inner size 3 (0 &lt;= &lt;code&gt;inner_size_3&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_size_4</label>
    <info>Inner size 4 (0 &lt;= &lt;code&gt;inner_size_4&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_1</label>
    <info>Inner stiffness 1 + (0 &lt;= &lt;code&gt;inner_stiffness_1&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_1__</label>
    <info>Inner stiffness 1 - (0 &lt;= &lt;code&gt;inner_stiffness_1__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_2</label>
    <info>Inner stiffness 2 + (0 &lt;= &lt;code&gt;inner_stiffness_2&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_2__</label>
    <info>Inner stiffness 2 - (0 &lt;= &lt;code&gt;inner_stiffness_2__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_3</label>
    <info>Inner stiffness 3 + (0 &lt;= &lt;code&gt;inner_stiffness_3&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_3__</label>
    <info>Inner stiffness 3 - (0 &lt;= &lt;code&gt;inner_stiffness_3__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_4</label>
    <info>Inner stiffness 4 + (0 &lt;= &lt;code&gt;inner_stiffness_4&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>inner_stiffness_4__</label>
    <info>Inner stiffness 4 - (0 &lt;= &lt;code&gt;inner_stiffness_4__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>mic_position</label>
    <info>Mic position (0 &lt;= &lt;code&gt;mic_position&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_damping</label>
    <info>Outer damping (0 &lt;= &lt;code&gt;outer_damping&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_size_1</label>
    <info>Outer size 1 (0 &lt;= &lt;code&gt;outer_size_1&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_size_2</label>
    <info>Outer size 2 (0 &lt;= &lt;code&gt;outer_size_2&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_size_3</label>
    <info>Outer size 3 (0 &lt;= &lt;code&gt;outer_size_3&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_size_4</label>
    <info>Outer size 4 (0 &lt;= &lt;code&gt;outer_size_4&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_1</label>
    <info>Outer stiffness 1 + (0 &lt;= &lt;code&gt;outer_stiffness_1&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_1__</label>
    <info>Outer stiffness 1 - (0 &lt;= &lt;code&gt;outer_stiffness_1__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_2</label>
    <info>Outer stiffness 2 + (0 &lt;= &lt;code&gt;outer_stiffness_2&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_2__</label>
    <info>Outer stiffness 2 - (0 &lt;= &lt;code&gt;outer_stiffness_2__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_3</label>
    <info>Outer stiffness 3 + (0 &lt;= &lt;code&gt;outer_stiffness_3&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_3__</label>
    <info>Outer stiffness 3 - (0 &lt;= &lt;code&gt;outer_stiffness_3__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_4</label>
    <info>Outer stiffness 4 + (0 &lt;= &lt;code&gt;outer_stiffness_4&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>outer_stiffness_4__</label>
    <info>Outer stiffness 4 - (0 &lt;= &lt;code&gt;outer_stiffness_4__&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#ab,video='#ac,midi='#ad)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.gongbeater</label>
   <info>Gong beater by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?impulse_gain:'a,?strike_duration:'b,
 ?strike_gain:'c,source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>impulse_gain</label>
    <info>Impulse gain (dB) (-70 &lt;= &lt;code&gt;impulse_gain&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>strike_duration</label>
    <info>Strike duration (s) (0.001 &lt;= &lt;code&gt;strike_duration&lt;/code&gt; &lt;= 0.2).</info>
    <section>
     <label>default</label>
     <info>0.100500002503</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>strike_gain</label>
    <info>Strike gain (dB) (-70 &lt;= &lt;code&gt;strike_gain&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.gsm</label>
   <info>GSM simulator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?dry_wet_mix:'a,?error_rate:'b,
 ?number_of_passes:int,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>dry_wet_mix</label>
    <info>Dry/wet mix (0 &lt;= &lt;code&gt;dry_wet_mix&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>error_rate</label>
    <info>Error rate (bits/block) (0 &lt;= &lt;code&gt;error_rate&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>number_of_passes</label>
    <info>Number of passes (0 &lt;= &lt;code&gt;number_of_passes&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.gverb</label>
   <info>GVerb by Juhana Sadeharju &lt;kouhia at nic.funet.fi&gt;, LADSPAification by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?damping:'a,?dry_signal_level:'b,
 ?early_reflection_level:'c,?input_bandwidth:'d,
 ?reverb_time:'e,?roomsize:'f,?tail_level:'g,
 source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>damping</label>
    <info>Damping (0 &lt;= &lt;code&gt;damping&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_signal_level</label>
    <info>Dry signal level (dB) (-70 &lt;= &lt;code&gt;dry_signal_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>early_reflection_level</label>
    <info>Early reflection level (dB) (-70 &lt;= &lt;code&gt;early_reflection_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>input_bandwidth</label>
    <info>Input bandwidth (0 &lt;= &lt;code&gt;input_bandwidth&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.75</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>reverb_time</label>
    <info>Reverb time (s) (0.1 &lt;= &lt;code&gt;reverb_time&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>7.57499980927</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>roomsize</label>
    <info>Roomsize (m) (1 &lt;= &lt;code&gt;roomsize&lt;/code&gt; &lt;= 300).</info>
    <section>
     <label>default</label>
     <info>75.75</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tail_level</label>
    <info>Tail level (dB) (-70 &lt;= &lt;code&gt;tail_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-17.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.hardlimiter</label>
   <info>Hard Limiter by Marcus Andersson.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?db_limit:'a,?residue_level:'b,?wet_level:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>db_limit</label>
    <info>dB limit (-50 &lt;= &lt;code&gt;db_limit&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>residue_level</label>
    <info>Residue level (0 &lt;= &lt;code&gt;residue_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>wet_level</label>
    <info>Wet level (0 &lt;= &lt;code&gt;wet_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.harmonicgen</label>
   <info>Harmonic generator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?_10th_harmonic_magnitude:'a,
 ?_2nd_harmonic_magnitude:'b,?_3rd_harmonic_magnitude:'c,
 ?_4th_harmonic_magnitude:'d,?_5th_harmonic_magnitude:'e,
 ?_6th_harmonic_magnitude:'f,?_7th_harmonic_magnitude:'g,
 ?_8th_harmonic_magnitude:'h,?_9th_harmonic_magnitude:'i,
 ?fundamental_magnitude:'j,
 source(audio='#k,video='#l,midi='#m))-&gt;
source(audio='#k,video='#l,midi='#m)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_10th_harmonic_magnitude</label>
    <info>10th harmonic magnitude (-1 &lt;= &lt;code&gt;_10th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_2nd_harmonic_magnitude</label>
    <info>2nd harmonic magnitude (-1 &lt;= &lt;code&gt;_2nd_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_3rd_harmonic_magnitude</label>
    <info>3rd harmonic magnitude (-1 &lt;= &lt;code&gt;_3rd_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_4th_harmonic_magnitude</label>
    <info>4th harmonic magnitude (-1 &lt;= &lt;code&gt;_4th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_5th_harmonic_magnitude</label>
    <info>5th harmonic magnitude (-1 &lt;= &lt;code&gt;_5th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_6th_harmonic_magnitude</label>
    <info>6th harmonic magnitude (-1 &lt;= &lt;code&gt;_6th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_7th_harmonic_magnitude</label>
    <info>7th harmonic magnitude (-1 &lt;= &lt;code&gt;_7th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_8th_harmonic_magnitude</label>
    <info>8th harmonic magnitude (-1 &lt;= &lt;code&gt;_8th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_9th_harmonic_magnitude</label>
    <info>9th harmonic magnitude (-1 &lt;= &lt;code&gt;_9th_harmonic_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>fundamental_magnitude</label>
    <info>Fundamental magnitude (-1 &lt;= &lt;code&gt;fundamental_magnitude&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#k,video='#l,midi='#m)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.hermesfilter</label>
   <info>Hermes Filter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?band_1_gain:'a,?band_2_gain:'b,
 ?band_3_gain:'c,?delay1_feedback:'d,?delay1_length:'e,
 ?delay1_wetness:'f,?delay2_feedback:'g,
 ?delay2_length:'h,?delay2_wetness:'i,
 ?delay3_feedback:'j,?delay3_length:'k,
 ?delay3_wetness:'l,?dist1_drive:'m,?dist2_drive:'n,
 ?dist3_drive:'o,?filt1_freq:'p,?filt1_lfo1_level:'q,
 ?filt1_lfo2_level:'r,?filt1_q:'s,?filt1_resonance:'t,
 ?filt1_type:int,?filt2_freq:'u,?filt2_lfo1_level:'v,
 ?filt2_lfo2_level:'w,?filt2_q:'x,?filt2_resonance:'y,
 ?filt2_type:int,?filt3_freq:'z,?filt3_lfo1_level:'aa,
 ?filt3_lfo2_level:'ab,?filt3_q:'ac,?filt3_resonance:'ad,
 ?filt3_type:int,?input_gain:'ae,?lfo1_freq:'af,
 ?lfo1_wave:int,?lfo2_freq:'ag,?lfo2_wave:int,
 ?osc1_freq:'ah,?osc1_gain:'ai,?osc1_wave:int,
 ?osc2_freq:'aj,?osc2_gain:'ak,?osc2_wave:int,
 ?ringmod_1_depth:'al,?ringmod_2_depth:'am,
 ?ringmod_3_depth:'an,?rm1_gain:'ao,?rm2_gain:'ap,
 ?rm3_gain:'aq,?xover_lower_freq:'ar,
 ?xover_upper_freq:'as,
 source(audio='#at,video='#au,midi='#av))-&gt;
source(audio='#at,video='#au,midi='#av)
where
  'a, 'aa, 'ab, 'ac, 'ad, 'ae, 'af, 'ag, 'ah, 'ai, 'aj, 'ak, 'al, 'am, 'an, 'ao, 'ap, 'aq, 'ar, 'as, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o, 'p, 'q, 'r, 's, 't, 'u, 'v, 'w, 'x, 'y, 'z is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>band_1_gain</label>
    <info>Band 1 gain (dB) (-70 &lt;= &lt;code&gt;band_1_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_2_gain</label>
    <info>Band 2 gain (dB) (-70 &lt;= &lt;code&gt;band_2_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_3_gain</label>
    <info>Band 3 gain (dB) (-70 &lt;= &lt;code&gt;band_3_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay1_feedback</label>
    <info>Delay1 feedback (0 &lt;= &lt;code&gt;delay1_feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay1_length</label>
    <info>Delay1 length (s) (0 &lt;= &lt;code&gt;delay1_length&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay1_wetness</label>
    <info>Delay1 wetness (0 &lt;= &lt;code&gt;delay1_wetness&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay2_feedback</label>
    <info>Delay2 feedback (0 &lt;= &lt;code&gt;delay2_feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay2_length</label>
    <info>Delay2 length (s) (0 &lt;= &lt;code&gt;delay2_length&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay2_wetness</label>
    <info>Delay2 wetness (0 &lt;= &lt;code&gt;delay2_wetness&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay3_feedback</label>
    <info>Delay3 feedback (0 &lt;= &lt;code&gt;delay3_feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay3_length</label>
    <info>Delay3 length (s) (0 &lt;= &lt;code&gt;delay3_length&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>delay3_wetness</label>
    <info>Delay3 wetness (0 &lt;= &lt;code&gt;delay3_wetness&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dist1_drive</label>
    <info>Dist1 drive (0 &lt;= &lt;code&gt;dist1_drive&lt;/code&gt; &lt;= 3).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dist2_drive</label>
    <info>Dist2 drive (0 &lt;= &lt;code&gt;dist2_drive&lt;/code&gt; &lt;= 3).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dist3_drive</label>
    <info>Dist3 drive (0 &lt;= &lt;code&gt;dist3_drive&lt;/code&gt; &lt;= 3).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt1_freq</label>
    <info>Filt1 freq (0 &lt;= &lt;code&gt;filt1_freq&lt;/code&gt; &lt;= 8000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt1_lfo1_level</label>
    <info>Filt1 LFO1 level (-500 &lt;= &lt;code&gt;filt1_lfo1_level&lt;/code&gt; &lt;= 500).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt1_lfo2_level</label>
    <info>Filt1 LFO2 level (-500 &lt;= &lt;code&gt;filt1_lfo2_level&lt;/code&gt; &lt;= 500).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt1_q</label>
    <info>Filt1 q (0 &lt;= &lt;code&gt;filt1_q&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt1_resonance</label>
    <info>Filt1 resonance (0 &lt;= &lt;code&gt;filt1_resonance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt1_type</label>
    <info>Filt1 type (0=none, 1=LP, 2=HP, 3=BP, 4=BR, 5=AP) (0 &lt;= &lt;code&gt;filt1_type&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>filt2_freq</label>
    <info>Filt2 freq (0 &lt;= &lt;code&gt;filt2_freq&lt;/code&gt; &lt;= 8000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt2_lfo1_level</label>
    <info>Filt2 LFO1 level (-500 &lt;= &lt;code&gt;filt2_lfo1_level&lt;/code&gt; &lt;= 500).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt2_lfo2_level</label>
    <info>Filt2 LFO2 level (-500 &lt;= &lt;code&gt;filt2_lfo2_level&lt;/code&gt; &lt;= 500).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt2_q</label>
    <info>Filt2 q (0 &lt;= &lt;code&gt;filt2_q&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt2_resonance</label>
    <info>Filt2 resonance (0 &lt;= &lt;code&gt;filt2_resonance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt2_type</label>
    <info>Filt2 type (0=none, 1=LP, 2=HP, 3=BP, 4=BR, 5=AP) (0 &lt;= &lt;code&gt;filt2_type&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>filt3_freq</label>
    <info>Filt3 freq (0 &lt;= &lt;code&gt;filt3_freq&lt;/code&gt; &lt;= 8000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt3_lfo1_level</label>
    <info>Filt3 LFO1 level (-500 &lt;= &lt;code&gt;filt3_lfo1_level&lt;/code&gt; &lt;= 500).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt3_lfo2_level</label>
    <info>Filt3 LFO2 level (-500 &lt;= &lt;code&gt;filt3_lfo2_level&lt;/code&gt; &lt;= 500).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt3_q</label>
    <info>Filt3 q (0 &lt;= &lt;code&gt;filt3_q&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt3_resonance</label>
    <info>Filt3 resonance (0 &lt;= &lt;code&gt;filt3_resonance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filt3_type</label>
    <info>Filt3 type (0=none, 1=LP, 2=HP, 3=BP, 4=BR, 5=AP) (0 &lt;= &lt;code&gt;filt3_type&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>input_gain</label>
    <info>Input gain (dB) (-70 &lt;= &lt;code&gt;input_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo1_freq</label>
    <info>LFO1 freq (Hz) (0 &lt;= &lt;code&gt;lfo1_freq&lt;/code&gt; &lt;= 1000).</info>
    <section>
     <label>default</label>
     <info>250.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo1_wave</label>
    <info>LFO1 wave (0 = sin, 1 = tri, 2 = saw, 3 = squ, 4 = s&amp;h) (0 &lt;= &lt;code&gt;lfo1_wave&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>lfo2_freq</label>
    <info>LFO2 freq (Hz) (0 &lt;= &lt;code&gt;lfo2_freq&lt;/code&gt; &lt;= 1000).</info>
    <section>
     <label>default</label>
     <info>250.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo2_wave</label>
    <info>LFO2 wave (0 = sin, 1 = tri, 2 = saw, 3 = squ, 4 = s&amp;h) (0 &lt;= &lt;code&gt;lfo2_wave&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>osc1_freq</label>
    <info>Osc1 freq (Hz) (0 &lt;= &lt;code&gt;osc1_freq&lt;/code&gt; &lt;= 4000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>osc1_gain</label>
    <info>Osc1 gain (dB) (-70 &lt;= &lt;code&gt;osc1_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>osc1_wave</label>
    <info>Osc1 wave (0 = sin, 1 = tri, 2 = saw, 3 = squ, 4 = noise) (0 &lt;= &lt;code&gt;osc1_wave&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>osc2_freq</label>
    <info>Osc2 freq (Hz) (0 &lt;= &lt;code&gt;osc2_freq&lt;/code&gt; &lt;= 4000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>osc2_gain</label>
    <info>Osc2 gain (dB) (-70 &lt;= &lt;code&gt;osc2_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>osc2_wave</label>
    <info>Osc2 wave (0 = sin, 1 = tri, 2 = saw, 3 = squ, 4 = noise) (0 &lt;= &lt;code&gt;osc2_wave&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>ringmod_1_depth</label>
    <info>Ringmod 1 depth (0=none, 1=AM, 2=RM) (0 &lt;= &lt;code&gt;ringmod_1_depth&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ringmod_2_depth</label>
    <info>Ringmod 2 depth (0=none, 1=AM, 2=RM) (0 &lt;= &lt;code&gt;ringmod_2_depth&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ringmod_3_depth</label>
    <info>Ringmod 3 depth (0=none, 1=AM, 2=RM) (0 &lt;= &lt;code&gt;ringmod_3_depth&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rm1_gain</label>
    <info>RM1 gain (dB) (-70 &lt;= &lt;code&gt;rm1_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rm2_gain</label>
    <info>RM2 gain (dB) (-70 &lt;= &lt;code&gt;rm2_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rm3_gain</label>
    <info>RM3 gain (dB) (-70 &lt;= &lt;code&gt;rm3_gain&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>-70.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>xover_lower_freq</label>
    <info>Xover lower freq (50 &lt;= &lt;code&gt;xover_lower_freq&lt;/code&gt; &lt;= 6000).</info>
    <section>
     <label>default</label>
     <info>1537.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>xover_upper_freq</label>
    <info>Xover upper freq (1000 &lt;= &lt;code&gt;xover_upper_freq&lt;/code&gt; &lt;= 10000).</info>
    <section>
     <label>default</label>
     <info>7750.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#at,video='#au,midi='#av)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.highpass_iir</label>
   <info>Glame Highpass Filter by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,?stages:int,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (4.41 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>36.1194992065</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>stages</label>
    <info>Stages(2 poles per stage) (1 &lt;= &lt;code&gt;stages&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.hilbert</label>
   <info>Hilbert transformer by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.hpf</label>
   <info>Simple High Pass Filter by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (Hz) (0 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 22050).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.imp</label>
   <info>Impulse convolver by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?gain:'a,?high_latency_mode:int,
 ?impulse_id:int,source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Gain (dB) (-90 &lt;= &lt;code&gt;gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>high_latency_mode</label>
    <info>High latency mode (0 &lt;= &lt;code&gt;high_latency_mode&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>impulse_id</label>
    <info>Impulse ID (1 &lt;= &lt;code&gt;impulse_id&lt;/code&gt; &lt;= 21).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.impulse_fc</label>
   <info>Nonbandlimited single-sample impulses (Frequency: Control) by Andy Wingo &lt;wingo at pobox dot com&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,frequency:'a)-&gt;source(audio=1,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Frequency (Hz) (0 &lt;= &lt;code&gt;frequency&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.inv</label>
   <info>Inverter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.karaoke</label>
   <info>Karaoke by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?vocal_volume:'a,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>vocal_volume</label>
    <info>Vocal volume (dB) (-70 &lt;= &lt;code&gt;vocal_volume&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.lcrdelay</label>
   <info>L/C/R Delay by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?c_delay:'a,?c_level:'b,?dry_wet_level:'c,
 ?feedback:'d,?high_damp:'e,?l_delay:'f,?l_level:'g,
 ?low_damp:'h,?r_delay:'i,?r_level:'j,?spread:'k,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>c_delay</label>
    <info>C delay (ms) (0 &lt;= &lt;code&gt;c_delay&lt;/code&gt; &lt;= 2700).</info>
    <section>
     <label>default</label>
     <info>675.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>c_level</label>
    <info>C level (0 &lt;= &lt;code&gt;c_level&lt;/code&gt; &lt;= 50).</info>
    <section>
     <label>default</label>
     <info>25.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_wet_level</label>
    <info>Dry/Wet level (0 &lt;= &lt;code&gt;dry_wet_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (-100 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>high_damp</label>
    <info>High damp (%) (0 &lt;= &lt;code&gt;high_damp&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>50.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>l_delay</label>
    <info>L delay (ms) (0 &lt;= &lt;code&gt;l_delay&lt;/code&gt; &lt;= 2700).</info>
    <section>
     <label>default</label>
     <info>675.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>l_level</label>
    <info>L level (0 &lt;= &lt;code&gt;l_level&lt;/code&gt; &lt;= 50).</info>
    <section>
     <label>default</label>
     <info>25.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>low_damp</label>
    <info>Low damp (%) (0 &lt;= &lt;code&gt;low_damp&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>50.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>r_delay</label>
    <info>R delay (ms) (0 &lt;= &lt;code&gt;r_delay&lt;/code&gt; &lt;= 2700).</info>
    <section>
     <label>default</label>
     <info>675.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>r_level</label>
    <info>R level (0 &lt;= &lt;code&gt;r_level&lt;/code&gt; &lt;= 50).</info>
    <section>
     <label>default</label>
     <info>25.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>spread</label>
    <info>Spread (0 &lt;= &lt;code&gt;spread&lt;/code&gt; &lt;= 50).</info>
    <section>
     <label>default</label>
     <info>25.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.lfophaser</label>
   <info>LFO Phaser by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?feedback:'a,?lfo_depth:'b,?lfo_rate:'c,
 ?spread:'d,source(audio='#e,video='#f,midi='#g))-&gt;
source(audio='#e,video='#f,midi='#g)
where 'a, 'b, 'c, 'd is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (-1 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_depth</label>
    <info>LFO depth (0 &lt;= &lt;code&gt;lfo_depth&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_rate</label>
    <info>LFO rate (Hz) (0 &lt;= &lt;code&gt;lfo_rate&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>25.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>spread</label>
    <info>Spread (octaves) (0 &lt;= &lt;code&gt;spread&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#e,video='#f,midi='#g)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.lowpass_iir</label>
   <info>Glame Lowpass Filter by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,?stages:int,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (4.41 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>2422.96972656</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>stages</label>
    <info>Stages(2 poles per stage) (1 &lt;= &lt;code&gt;stages&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.lpf</label>
   <info>Simple Low Pass Filter by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff Frequency (Hz) (0 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 22050).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.lsfilter</label>
   <info>LS Filter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?cutoff_frequency:'a,?filter_type:int,
 ?resonance:'b,source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>cutoff_frequency</label>
    <info>Cutoff frequency (Hz) (88.2 &lt;= &lt;code&gt;cutoff_frequency&lt;/code&gt; &lt;= 22050).</info>
    <section>
     <label>default</label>
     <info>1394.56445312</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filter_type</label>
    <info>Filter type (0=LP, 1=BP, 2=HP) (0 &lt;= &lt;code&gt;filter_type&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>resonance</label>
    <info>Resonance (0 &lt;= &lt;code&gt;resonance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.matrixmsst</label>
   <info>Matrix: MS to Stereo by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?width:'a,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>width</label>
    <info>Width (0 &lt;= &lt;code&gt;width&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.matrixspatialiser</label>
   <info>Matrix Spatialiser by Joern Nettingsmeier &lt;nettings(at)folkwang-hochschule.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?width:int,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>width</label>
    <info>Width (-512 &lt;= &lt;code&gt;width&lt;/code&gt; &lt;= 512).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.matrixstms</label>
   <info>Matrix: Stereo to MS by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.mbeq</label>
   <info>Multiband EQ by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?_10000hz_gain:'a,?_100hz_gain:'b,
 ?_1250hz_gain:'c,?_156hz_gain:'d,?_1750hz_gain:'e,
 ?_20000hz_gain:'f,?_220hz_gain:'g,?_2500hz_gain:'h,
 ?_311hz_gain:'i,?_3500hz_gain:'j,?_440hz_gain:'k,
 ?_5000hz_gain:'l,?_50hz_gain:'m,?_622hz_gain:'n,
 ?_880hz_gain:'o,source(audio='#p,video='#q,midi='#r))-&gt;
source(audio='#p,video='#q,midi='#r)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_10000hz_gain</label>
    <info>10000Hz gain (-70 &lt;= &lt;code&gt;_10000hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_100hz_gain</label>
    <info>100Hz gain (-70 &lt;= &lt;code&gt;_100hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_1250hz_gain</label>
    <info>1250Hz gain (-70 &lt;= &lt;code&gt;_1250hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_156hz_gain</label>
    <info>156Hz gain (-70 &lt;= &lt;code&gt;_156hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_1750hz_gain</label>
    <info>1750Hz gain (-70 &lt;= &lt;code&gt;_1750hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_20000hz_gain</label>
    <info>20000Hz gain (-70 &lt;= &lt;code&gt;_20000hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_220hz_gain</label>
    <info>220Hz gain (-70 &lt;= &lt;code&gt;_220hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_2500hz_gain</label>
    <info>2500Hz gain (-70 &lt;= &lt;code&gt;_2500hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_311hz_gain</label>
    <info>311Hz gain (-70 &lt;= &lt;code&gt;_311hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_3500hz_gain</label>
    <info>3500Hz gain (-70 &lt;= &lt;code&gt;_3500hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_440hz_gain</label>
    <info>440Hz gain (-70 &lt;= &lt;code&gt;_440hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_5000hz_gain</label>
    <info>5000Hz gain (-70 &lt;= &lt;code&gt;_5000hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_50hz_gain</label>
    <info>50Hz gain (low shelving) (-70 &lt;= &lt;code&gt;_50hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_622hz_gain</label>
    <info>622Hz gain (-70 &lt;= &lt;code&gt;_622hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>_880hz_gain</label>
    <info>880Hz gain (-70 &lt;= &lt;code&gt;_880hz_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#p,video='#q,midi='#r)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.moddelay</label>
   <info>Modulatable delay by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?base_delay:'a,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>base_delay</label>
    <info>Base delay (s) (0 &lt;= &lt;code&gt;base_delay&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.multivoicechorus</label>
   <info>Multivoice Chorus by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay_base:'a,?detune:'b,?lfo_frequency:'c,
 ?number_of_voices:int,?output_attenuation:'d,
 ?voice_separation:'e,
 source(audio='#f,video='#g,midi='#h))-&gt;
source(audio='#f,video='#g,midi='#h)
where 'a, 'b, 'c, 'd, 'e is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay_base</label>
    <info>Delay base (ms) (10 &lt;= &lt;code&gt;delay_base&lt;/code&gt; &lt;= 40).</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>detune</label>
    <info>Detune (%) (0 &lt;= &lt;code&gt;detune&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>lfo_frequency</label>
    <info>LFO frequency (Hz) (2 &lt;= &lt;code&gt;lfo_frequency&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>9.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>number_of_voices</label>
    <info>Number of voices (1 &lt;= &lt;code&gt;number_of_voices&lt;/code&gt; &lt;= 8).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>output_attenuation</label>
    <info>Output attenuation (dB) (-20 &lt;= &lt;code&gt;output_attenuation&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>voice_separation</label>
    <info>Voice separation (ms) (0 &lt;= &lt;code&gt;voice_separation&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#f,video='#g,midi='#h)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.noise_white</label>
   <info>White Noise Source by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude:'a)-&gt;
source(audio=1,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude</label>
    <info>Amplitude (0 &lt;= &lt;code&gt;amplitude&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.notch_iir</label>
   <info>Mag's Notch Filter by Alexander Ehlert &lt;mag(at)glame.de&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bandwidth:'a,?center_frequency:'b,
 ?stages:int,source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bandwidth</label>
    <info>Bandwidth (Hz) (4.41 &lt;= &lt;code&gt;bandwidth&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>295.831787109</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>center_frequency</label>
    <info>Center Frequency (Hz) (4.41 &lt;= &lt;code&gt;center_frequency&lt;/code&gt; &lt;= 19845).</info>
    <section>
     <label>default</label>
     <info>295.831787109</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>stages</label>
    <info>Stages(2 poles per stage) (1 &lt;= &lt;code&gt;stages&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.pitchscale</label>
   <info>Pitch Scaler by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?pitch_co_efficient:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>pitch_co_efficient</label>
    <info>Pitch co-efficient (0.5 &lt;= &lt;code&gt;pitch_co_efficient&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.pitchscalehq</label>
   <info>Higher Quality Pitch Scaler by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?pitch_co_efficient:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>pitch_co_efficient</label>
    <info>Pitch co-efficient (0.5 &lt;= &lt;code&gt;pitch_co_efficient&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.plate</label>
   <info>Plate reverb by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?damping:'a,?dry_wet_mix:'b,?reverb_time:'c,
 source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>damping</label>
    <info>Damping (0 &lt;= &lt;code&gt;damping&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_wet_mix</label>
    <info>Dry/wet mix (0 &lt;= &lt;code&gt;dry_wet_mix&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>reverb_time</label>
    <info>Reverb time (0.01 &lt;= &lt;code&gt;reverb_time&lt;/code&gt; &lt;= 8.5).</info>
    <section>
     <label>default</label>
     <info>4.25500011444</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.pointercastdistortion</label>
   <info>Pointer cast distortion by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?dry_wet_mix:'a,?effect_cutoff_freq:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>dry_wet_mix</label>
    <info>Dry/wet mix (0 &lt;= &lt;code&gt;dry_wet_mix&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>effect_cutoff_freq</label>
    <info>Effect cutoff freq (Hz) (4.41 &lt;= &lt;code&gt;effect_cutoff_freq&lt;/code&gt; &lt;= 13230).</info>
    <section>
     <label>default</label>
     <info>32.6376495361</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.rateshifter</label>
   <info>Rate shifter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?rate:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>rate</label>
    <info>Rate (-4 &lt;= &lt;code&gt;rate&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.retroflange</label>
   <info>Retro Flanger by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?average_stall:'a,?flange_frequency:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>average_stall</label>
    <info>Average stall (ms) (0 &lt;= &lt;code&gt;average_stall&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>2.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>flange_frequency</label>
    <info>Flange frequency (Hz) (0.5 &lt;= &lt;code&gt;flange_frequency&lt;/code&gt; &lt;= 8).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.revdelay</label>
   <info>Reverse Delay (5s max) by Jesse Chappell &lt;jesse at essej dot net&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?crossfade_samples:int,?delay_time:'a,
 ?dry_level:'b,?feedback:'c,?wet_level:'d,
 source(audio='#e,video='#f,midi='#g))-&gt;
source(audio='#e,video='#f,midi='#g)
where 'a, 'b, 'c, 'd is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>crossfade_samples</label>
    <info>Crossfade samples (0 &lt;= &lt;code&gt;crossfade_samples&lt;/code&gt; &lt;= 5000).</info>
    <section>
     <label>default</label>
     <info>1250</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>delay_time</label>
    <info>Delay Time (s) (0 &lt;= &lt;code&gt;delay_time&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>dry_level</label>
    <info>Dry Level (dB) (-70 &lt;= &lt;code&gt;dry_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>feedback</label>
    <info>Feedback (0 &lt;= &lt;code&gt;feedback&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>wet_level</label>
    <info>Wet Level (dB) (-70 &lt;= &lt;code&gt;wet_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#e,video='#f,midi='#g)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.ringmod_1i1o1l</label>
   <info>Ringmod with LFO by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?frequency:'a,?modulation_depth:'b,
 ?sawtooth_level:'c,?sine_level:'d,?square_level:'e,
 ?triangle_level:'f,source(audio='#g,video='#h,midi='#i))-&gt;
source(audio='#g,video='#h,midi='#i)
where 'a, 'b, 'c, 'd, 'e, 'f is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Frequency (Hz) (1 &lt;= &lt;code&gt;frequency&lt;/code&gt; &lt;= 1000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>modulation_depth</label>
    <info>Modulation depth (0=none, 1=AM, 2=RM) (0 &lt;= &lt;code&gt;modulation_depth&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>sawtooth_level</label>
    <info>Sawtooth level (-1 &lt;= &lt;code&gt;sawtooth_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>sine_level</label>
    <info>Sine level (-1 &lt;= &lt;code&gt;sine_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>square_level</label>
    <info>Square level (-1 &lt;= &lt;code&gt;square_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>triangle_level</label>
    <info>Triangle level (-1 &lt;= &lt;code&gt;triangle_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#g,video='#h,midi='#i)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.ringmod_2i1o</label>
   <info>Ringmod with two inputs by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?modulation_depth:'a,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>modulation_depth</label>
    <info>Modulation depth (0=none, 1=AM, 2=RM) (0 &lt;= &lt;code&gt;modulation_depth&lt;/code&gt; &lt;= 2).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.satanmaximiser</label>
   <info>Barry's Satan Maximiser by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?decay_time:'a,?knee_point:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>decay_time</label>
    <info>Decay time (samples) (2 &lt;= &lt;code&gt;decay_time&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_point</label>
    <info>Knee point (dB) (-90 &lt;= &lt;code&gt;knee_point&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sc1</label>
   <info>SC1 by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?knee_radius:'b,
 ?makeup_gain:'c,?ratio:'d,?release_time:'e,
 ?threshold_level:'f,
 source(audio='#g,video='#h,midi='#i))-&gt;
source(audio='#g,video='#h,midi='#i)
where 'a, 'b, 'c, 'd, 'e, 'f is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (ms) (2 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 400).</info>
    <section>
     <label>default</label>
     <info>101.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_radius</label>
    <info>Knee radius (dB) (1 &lt;= &lt;code&gt;knee_radius&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>3.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>makeup_gain</label>
    <info>Makeup gain (dB) (0 &lt;= &lt;code&gt;makeup_gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Ratio (1:n) (1 &lt;= &lt;code&gt;ratio&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (ms) (2 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 800).</info>
    <section>
     <label>default</label>
     <info>401.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold_level</label>
    <info>Threshold level (dB) (-30 &lt;= &lt;code&gt;threshold_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#g,video='#h,midi='#i)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sc2</label>
   <info>SC2 by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?knee_radius:'b,
 ?makeup_gain:'c,?ratio:'d,?release_time:'e,
 ?threshold_level:'f,source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)
where 'a, 'b, 'c, 'd, 'e, 'f is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (ms) (2 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 400).</info>
    <section>
     <label>default</label>
     <info>101.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_radius</label>
    <info>Knee radius (dB) (1 &lt;= &lt;code&gt;knee_radius&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>3.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>makeup_gain</label>
    <info>Makeup gain (dB) (0 &lt;= &lt;code&gt;makeup_gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Ratio (1:n) (1 &lt;= &lt;code&gt;ratio&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (ms) (2 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 800).</info>
    <section>
     <label>default</label>
     <info>401.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold_level</label>
    <info>Threshold level (dB) (-30 &lt;= &lt;code&gt;threshold_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sc3</label>
   <info>SC3 by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?chain_balance:'b,
 ?knee_radius:'c,?makeup_gain:'d,?ratio:'e,
 ?release_time:'f,?threshold_level:'g,
 source(audio=3,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (ms) (2 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 400).</info>
    <section>
     <label>default</label>
     <info>101.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>chain_balance</label>
    <info>Chain balance (0 &lt;= &lt;code&gt;chain_balance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_radius</label>
    <info>Knee radius (dB) (1 &lt;= &lt;code&gt;knee_radius&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>3.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>makeup_gain</label>
    <info>Makeup gain (dB) (0 &lt;= &lt;code&gt;makeup_gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Ratio (1:n) (1 &lt;= &lt;code&gt;ratio&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (ms) (2 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 800).</info>
    <section>
     <label>default</label>
     <info>401.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold_level</label>
    <info>Threshold level (dB) (-30 &lt;= &lt;code&gt;threshold_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=3,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sc4</label>
   <info>SC4 by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?knee_radius:'b,
 ?makeup_gain:'c,?ratio:'d,?release_time:'e,?rms_peak:'f,
 ?threshold_level:'g,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (ms) (1.5 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 400).</info>
    <section>
     <label>default</label>
     <info>101.125</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_radius</label>
    <info>Knee radius (dB) (1 &lt;= &lt;code&gt;knee_radius&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>3.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>makeup_gain</label>
    <info>Makeup gain (dB) (0 &lt;= &lt;code&gt;makeup_gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Ratio (1:n) (1 &lt;= &lt;code&gt;ratio&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (ms) (2 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 800).</info>
    <section>
     <label>default</label>
     <info>401.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rms_peak</label>
    <info>RMS/peak (0 &lt;= &lt;code&gt;rms_peak&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold_level</label>
    <info>Threshold level (dB) (-30 &lt;= &lt;code&gt;threshold_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sc4m</label>
   <info>SC4 mono by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?knee_radius:'b,
 ?makeup_gain:'c,?ratio:'d,?release_time:'e,?rms_peak:'f,
 ?threshold_level:'g,
 source(audio='#h,video='#i,midi='#j))-&gt;
source(audio='#h,video='#i,midi='#j)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (ms) (1.5 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 400).</info>
    <section>
     <label>default</label>
     <info>101.125</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_radius</label>
    <info>Knee radius (dB) (1 &lt;= &lt;code&gt;knee_radius&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>3.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>makeup_gain</label>
    <info>Makeup gain (dB) (0 &lt;= &lt;code&gt;makeup_gain&lt;/code&gt; &lt;= 24).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Ratio (1:n) (1 &lt;= &lt;code&gt;ratio&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (ms) (2 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 800).</info>
    <section>
     <label>default</label>
     <info>401.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rms_peak</label>
    <info>RMS/peak (0 &lt;= &lt;code&gt;rms_peak&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold_level</label>
    <info>Threshold level (dB) (-30 &lt;= &lt;code&gt;threshold_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#h,video='#i,midi='#j)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.se4</label>
   <info>SE4 by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_time:'a,?attenuation:'b,
 ?knee_radius:'c,?ratio:'d,?release_time:'e,?rms_peak:'f,
 ?threshold_level:'g,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_time</label>
    <info>Attack time (ms) (1.5 &lt;= &lt;code&gt;attack_time&lt;/code&gt; &lt;= 400).</info>
    <section>
     <label>default</label>
     <info>101.125</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>attenuation</label>
    <info>Attenuation (dB) (-24 &lt;= &lt;code&gt;attenuation&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee_radius</label>
    <info>Knee radius (dB) (1 &lt;= &lt;code&gt;knee_radius&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>3.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Ratio (1:n) (1 &lt;= &lt;code&gt;ratio&lt;/code&gt; &lt;= 20).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>release_time</label>
    <info>Release time (ms) (2 &lt;= &lt;code&gt;release_time&lt;/code&gt; &lt;= 800).</info>
    <section>
     <label>default</label>
     <info>401.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rms_peak</label>
    <info>RMS/peak (0 &lt;= &lt;code&gt;rms_peak&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold_level</label>
    <info>Threshold level (dB) (-30 &lt;= &lt;code&gt;threshold_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.shaper</label>
   <info>Wave shaper by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?waveshape:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>waveshape</label>
    <info>Waveshape (-10 &lt;= &lt;code&gt;waveshape&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sifter</label>
   <info>Signal sifter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?sift_size:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>sift_size</label>
    <info>Sift size (1 &lt;= &lt;code&gt;sift_size&lt;/code&gt; &lt;= 1000).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sincos</label>
   <info>Sine + cosine oscillator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?base_frequency:'a,?pitch_offset:'b)-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>base_frequency</label>
    <info>Base frequency (Hz) (0.0441 &lt;= &lt;code&gt;base_frequency&lt;/code&gt; &lt;= 22050).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>pitch_offset</label>
    <info>Pitch offset (0 &lt;= &lt;code&gt;pitch_offset&lt;/code&gt; &lt;= 8).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sine_faaa</label>
   <info>Sine Oscillator (Freq:audio, Amp:audio) by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sine_faac</label>
   <info>Sine Oscillator (Freq:audio, Amp:control) by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude</label>
    <info>Amplitude (0 &lt;= &lt;code&gt;amplitude&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sine_fcaa</label>
   <info>Sine Oscillator (Freq:control, Amp:audio) by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?frequency:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Frequency (Hz) (0 &lt;= &lt;code&gt;frequency&lt;/code&gt; &lt;= 22050).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sine_fcac</label>
   <info>Sine Oscillator (Freq:control, Amp:control) by Richard Furse (LADSPA example plugins).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude:'a,?frequency:'b)-&gt;
source(audio=1,video=0,midi=0)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude</label>
    <info>Amplitude (0 &lt;= &lt;code&gt;amplitude&lt;/code&gt;).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Frequency (Hz) (0 &lt;= &lt;code&gt;frequency&lt;/code&gt; &lt;= 22050).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.singlepara</label>
   <info>Single band parametric by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bandwidth:'a,?frequency:'b,?gain:'c,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bandwidth</label>
    <info>Bandwidth (octaves) (0 &lt;= &lt;code&gt;bandwidth&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>frequency</label>
    <info>Frequency (Hz) (0 &lt;= &lt;code&gt;frequency&lt;/code&gt; &lt;= 17640).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Gain (dB) (-70 &lt;= &lt;code&gt;gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.sinuswavewrapper</label>
   <info>Sinus wavewrapper by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?wrap_degree:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
source(audio='#b,video='#c,midi='#d)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>wrap_degree</label>
    <info>Wrap degree (0 &lt;= &lt;code&gt;wrap_degree&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.smoothdecimate</label>
   <info>Smooth Decimator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?resample_rate:'a,?smoothing:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>resample_rate</label>
    <info>Resample rate (0 &lt;= &lt;code&gt;resample_rate&lt;/code&gt; &lt;= 44100).</info>
    <section>
     <label>default</label>
     <info>44100.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>smoothing</label>
    <info>Smoothing (0 &lt;= &lt;code&gt;smoothing&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.split</label>
   <info>Mono to Stereo splitter by Frank Neumann &lt;franky(at)users.sourceforge.net&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=1,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.stepmuxer</label>
   <info>Step Demuxer by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?crossfade_time:'a,
 source(audio=9,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>crossfade_time</label>
    <info>Crossfade time (in ms) (0 &lt;= &lt;code&gt;crossfade_time&lt;/code&gt; &lt;= 100).</info>
    <section>
     <label>default</label>
     <info>50.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=9,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.surroundencoder</label>
   <info>Surround matrix encoder by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=4,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=4,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.svf</label>
   <info>State Variable Filter by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?filter_freq:'a,?filter_q:'b,
 ?filter_resonance:'c,?filter_type:int,
 source(audio='#d,video='#e,midi='#f))-&gt;
source(audio='#d,video='#e,midi='#f)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>filter_freq</label>
    <info>Filter freq (0 &lt;= &lt;code&gt;filter_freq&lt;/code&gt; &lt;= 6000).</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filter_q</label>
    <info>Filter Q (0 &lt;= &lt;code&gt;filter_q&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.25</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filter_resonance</label>
    <info>Filter resonance (0 &lt;= &lt;code&gt;filter_resonance&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>filter_type</label>
    <info>Filter type (0=none, 1=LP, 2=HP, 3=BP, 4=BR, 5=AP) (0 &lt;= &lt;code&gt;filter_type&lt;/code&gt; &lt;= 5).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d,video='#e,midi='#f)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.tapedelay</label>
   <info>Tape Delay Simulation by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?dry_level:'a,?tap_1_distance:'b,
 ?tap_1_level:'c,?tap_2_distance:'d,?tap_2_level:'e,
 ?tap_3_distance:'f,?tap_3_level:'g,?tap_4_distance:'h,
 ?tap_4_level:'i,?tape_speed:'j,
 source(audio='#k,video='#l,midi='#m))-&gt;
source(audio='#k,video='#l,midi='#m)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>dry_level</label>
    <info>Dry level (dB) (-90 &lt;= &lt;code&gt;dry_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-90.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_1_distance</label>
    <info>Tap 1 distance (inches) (0 &lt;= &lt;code&gt;tap_1_distance&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_1_level</label>
    <info>Tap 1 level (dB) (-90 &lt;= &lt;code&gt;tap_1_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_2_distance</label>
    <info>Tap 2 distance (inches) (0 &lt;= &lt;code&gt;tap_2_distance&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_2_level</label>
    <info>Tap 2 level (dB) (-90 &lt;= &lt;code&gt;tap_2_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-90.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_3_distance</label>
    <info>Tap 3 distance (inches) (0 &lt;= &lt;code&gt;tap_3_distance&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_3_level</label>
    <info>Tap 3 level (dB) (-90 &lt;= &lt;code&gt;tap_3_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-90.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_4_distance</label>
    <info>Tap 4 distance (inches) (0 &lt;= &lt;code&gt;tap_4_distance&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tap_4_level</label>
    <info>Tap 4 level (dB) (-90 &lt;= &lt;code&gt;tap_4_level&lt;/code&gt; &lt;= 0).</info>
    <section>
     <label>default</label>
     <info>-90.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tape_speed</label>
    <info>Tape speed (inches/sec, 1=normal) (0 &lt;= &lt;code&gt;tape_speed&lt;/code&gt; &lt;= 10).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#k,video='#l,midi='#m)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.transient</label>
   <info>Transient mangler by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack_speed:'a,?sustain_time:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack_speed</label>
    <info>Attack speed (-1 &lt;= &lt;code&gt;attack_speed&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>sustain_time</label>
    <info>Sustain time (-1 &lt;= &lt;code&gt;sustain_time&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.triplepara</label>
   <info>Triple band parametric with shelves by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?band_1_bandwidth:'a,?band_1_frequency:'b,
 ?band_1_gain:'c,?band_2_bandwidth:'d,
 ?band_2_frequency:'e,?band_2_gain:'f,
 ?band_3_bandwidth:'g,?band_3_frequency:'h,
 ?band_3_gain:'i,?high_shelving_frequency:'j,
 ?high_shelving_gain:'k,?high_shelving_slope:'l,
 ?low_shelving_frequency:'m,?low_shelving_gain:'n,
 ?low_shelving_slope:'o,
 source(audio='#p,video='#q,midi='#r))-&gt;
source(audio='#p,video='#q,midi='#r)
where
  'a, 'b, 'c, 'd, 'e, 'f, 'g, 'h, 'i, 'j, 'k, 'l, 'm, 'n, 'o is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>band_1_bandwidth</label>
    <info>Band 1 bandwidth (octaves) (0 &lt;= &lt;code&gt;band_1_bandwidth&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_1_frequency</label>
    <info>Band 1 frequency (Hz) (4.41 &lt;= &lt;code&gt;band_1_frequency&lt;/code&gt; &lt;= 21609).</info>
    <section>
     <label>default</label>
     <info>36.8967056274</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_1_gain</label>
    <info>Band 1 gain (dB) (-70 &lt;= &lt;code&gt;band_1_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_2_bandwidth</label>
    <info>Band 2 bandwidth (octaves) (0 &lt;= &lt;code&gt;band_2_bandwidth&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_2_frequency</label>
    <info>Band 2 frequency (Hz) (4.41 &lt;= &lt;code&gt;band_2_frequency&lt;/code&gt; &lt;= 21609).</info>
    <section>
     <label>default</label>
     <info>308.699981689</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_2_gain</label>
    <info>Band 2 gain (dB) (-70 &lt;= &lt;code&gt;band_2_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_3_bandwidth</label>
    <info>Band 3 bandwidth (octaves) (0 &lt;= &lt;code&gt;band_3_bandwidth&lt;/code&gt; &lt;= 4).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_3_frequency</label>
    <info>Band 3 frequency (Hz) (4.41 &lt;= &lt;code&gt;band_3_frequency&lt;/code&gt; &lt;= 21609).</info>
    <section>
     <label>default</label>
     <info>2582.76953125</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>band_3_gain</label>
    <info>Band 3 gain (dB) (-70 &lt;= &lt;code&gt;band_3_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>high_shelving_frequency</label>
    <info>High-shelving frequency (Hz) (4.41 &lt;= &lt;code&gt;high_shelving_frequency&lt;/code&gt; &lt;= 21609).</info>
    <section>
     <label>default</label>
     <info>21609.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>high_shelving_gain</label>
    <info>High-shelving gain (dB) (-70 &lt;= &lt;code&gt;high_shelving_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>high_shelving_slope</label>
    <info>High-shelving slope (0 &lt;= &lt;code&gt;high_shelving_slope&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>low_shelving_frequency</label>
    <info>Low-shelving frequency (Hz) (4.41 &lt;= &lt;code&gt;low_shelving_frequency&lt;/code&gt; &lt;= 21609).</info>
    <section>
     <label>default</label>
     <info>4.40999984741</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>low_shelving_gain</label>
    <info>Low-shelving gain (dB) (-70 &lt;= &lt;code&gt;low_shelving_gain&lt;/code&gt; &lt;= 30).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>low_shelving_slope</label>
    <info>Low-shelving slope (0 &lt;= &lt;code&gt;low_shelving_slope&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#p,video='#q,midi='#r)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.valve</label>
   <info>Valve saturation by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?distortion_character:'a,
 ?distortion_level:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>distortion_character</label>
    <info>Distortion character (0 &lt;= &lt;code&gt;distortion_character&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>distortion_level</label>
    <info>Distortion level (0 &lt;= &lt;code&gt;distortion_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.valverect</label>
   <info>Valve rectifier by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?distortion:'a,?sag_level:'b,
 source(audio='#c,video='#d,midi='#e))-&gt;
source(audio='#c,video='#d,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>distortion</label>
    <info>Distortion (0 &lt;= &lt;code&gt;distortion&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>sag_level</label>
    <info>Sag level (0 &lt;= &lt;code&gt;sag_level&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.vynil</label>
   <info>VyNil (Vinyl Effect) by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?crackle:'a,?rpm:'b,?surface_warping:'c,
 ?wear:'d,?year:'e,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b, 'c, 'd, 'e is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>crackle</label>
    <info>Crackle (0 &lt;= &lt;code&gt;crackle&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rpm</label>
    <info>RPM (33 &lt;= &lt;code&gt;rpm&lt;/code&gt; &lt;= 78).</info>
    <section>
     <label>default</label>
     <info>33.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>surface_warping</label>
    <info>Surface warping (0 &lt;= &lt;code&gt;surface_warping&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>wear</label>
    <info>Wear (0 &lt;= &lt;code&gt;wear&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>year</label>
    <info>Year (1900 &lt;= &lt;code&gt;year&lt;/code&gt; &lt;= 1990).</info>
    <section>
     <label>default</label>
     <info>1990.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.waveterrain</label>
   <info>Wave Terrain Oscillator by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.xfade</label>
   <info>Crossfade by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?crossfade:'a,source(audio=4,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>crossfade</label>
    <info>Crossfade (-1 &lt;= &lt;code&gt;crossfade&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=4,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.xfade4</label>
   <info>Crossfade (4 outs) by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?crossfade:'a,source(audio=4,video=0,midi=0))-&gt;
source(audio=4,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>crossfade</label>
    <info>Crossfade (-1 &lt;= &lt;code&gt;crossfade&lt;/code&gt; &lt;= 1).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=4,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>ladspa.zm1</label>
   <info>z-1 by Steve Harris &lt;steve(at)plugin.org.uk&gt;.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>limit</label>
   <info>Limit the signal.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:'a,?gain:'b,?knee:'c,?ratio:float,
 ?release:'d,?rms_window:float,?threshold:'e,
 source(audio='#f,video='#g,midi='#h))-&gt;
source(audio='#f,video='#g,midi='#h)
where 'a, 'b, 'c, 'd, 'e is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Attack time (ms).</info>
    <section>
     <label>default</label>
     <info>100.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>gain</label>
    <info>Additional gain (dB).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>knee</label>
    <info>Knee radius (dB).</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>Gain reduction ratio (n:1).</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Release time (ms).</info>
    <section>
     <label>default</label>
     <info>400.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rms_window</label>
    <info>Window for computing RMS (in sec).</info>
    <section>
     <label>default</label>
     <info>0.1</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Threshold level (dB).</info>
    <section>
     <label>default</label>
     <info>-10.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#f,video='#g,midi='#h)</info>
    </section>
   </section>
  </section>
  <section>
   <label>lin_of_dB</label>
   <info>Convert decibels into linear scale.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(float)-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>liquidsoap.version</label>
   <info>Liquidsoap version string.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>list.add</label>
   <info>Add an element at the top of a list.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.append</label>
   <info>Catenate two lists.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(['a],['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.assoc</label>
   <info>Alias for the &lt;code&gt;l[k]&lt;/code&gt; notation.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Key to look for</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>List of pairs (key,value)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string,[(string*string)])-&gt;string</info>
   </section>
  </section>
  <section>
   <label>list.filter</label>
   <info>Filter a list according to a filtering function.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>((('a)-&gt;bool),['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a)-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.fold</label>
   <info>Fold a function on every element of a list: list.fold(f,x1,[e1,..,en]) is f(...f(f(x1,e1),e2)...,en).</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>((('a,'b)-&gt;'a),'a,['b])-&gt;'a</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Function f for which f(x,e) which will be called on every element e with the current value of x, returning the new value of x.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a,'b)-&gt;'a</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Initial value x1, to be updated by successive calls of f(x,e).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['b]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.hd</label>
   <info>Return the head (first element) of a list, or "" if the list is empty.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>([string])-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.iter</label>
   <info>Call a function on every element of a list.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>((('a)-&gt;unit),['a])-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a)-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.length</label>
   <info>Get the length of a list, i.e. its number of elements.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(['a])-&gt;int</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.map</label>
   <info>Map a function on every element of a list.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>((('a)-&gt;'b),['a])-&gt;['b]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a)-&gt;'b</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.mem</label>
   <info>Check if an element belongs to a list.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,['a])-&gt;bool where 'a is an orderable type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a] where 'a is an orderable type</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.mem_assoc</label>
   <info>list.mem_assoc(key,l) returns true if l contains a pair (key,value)</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Key to look for</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is an orderable type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>List of pairs (key,value)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[('a*'b)] where 'a is an orderable type</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>('a,[('a*'b)])-&gt;bool where 'a is an orderable type</info>
   </section>
  </section>
  <section>
   <label>list.nth</label>
   <info>Get the n-th element of a list (the first element is at position 0).</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(['a],int)-&gt;'a</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.randomize</label>
   <info>Shuffle the content of a list.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.remove</label>
   <info>Remove a value from a list.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.remove_assoc</label>
   <info>Remove a pair from an associative list</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Key of pair to be removed</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>List of pairs (key,value)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string,[(string*string)])-&gt;[(string*string)]</info>
   </section>
  </section>
  <section>
   <label>list.rev</label>
   <info>Revert list order.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.sort</label>
   <info>Sort a list according to a comparison function.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>((('a,'a)-&gt;int),['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a,'a)-&gt;int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>list.tl</label>
   <info>Return the list without its first element.</info>
   <section>
    <label>_category</label>
    <info>List</info>
   </section>
   <section>
    <label>_type</label>
    <info>(['a])-&gt;['a]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>['a]</info>
    </section>
   </section>
  </section>
  <section>
   <label>log</label>
   <info>Log a message.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?label:string,?level:int,string)-&gt;unit</info>
   </section>
   <section>
    <label>label</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"lang"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>level</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>3</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>log_clocks</label>
   <info>Create a log of clock times for all the clocks initially present. The log is in a simple format which you can directly use with gnuplot.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>delay</label>
    <info>Delay before setting up the clock logger. This should be used to ensure that the logger starts only after the clocks are created.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>interval</label>
    <info>Polling interval.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Path of the log file.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?delay:float,?interval:float,string)-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>map_metadata</label>
   <info>Rewrite metadata on the fly using a function.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?insert_missing:bool,?strip:bool,
 ?update:bool,(([(string*string)])-&gt;[(string*string)]),
 source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>insert_missing</label>
    <info>Treat track beginnings without metadata as having empty ones. The operational order is: create empty if needed, map and strip if enabled.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>strip</label>
    <info>Completely remove empty metadata. Operates on both empty values and empty metadata chunk.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>update</label>
    <info>Only update metadata. If false, only returned values will be set as metadata.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>A function that returns new metadata.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>max_int</label>
   <info>Maximal representable integer.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;int</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
  </section>
  <section>
   <label>mean</label>
   <info>Produce mono audio by taking the mean of all audio channels.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio=1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>merge_tracks</label>
   <info>Merge consecutive tracks from the input source.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>metadata.export</label>
   <info>Filter-out internal metadata.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>([(string*string)])-&gt;[(string*string)]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>mic_filter</label>
   <info>Remove low frequencies often produced by microphones.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The input source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>midi.chord</label>
   <info>Generate a chord.</info>
   <section>
    <label>_category</label>
    <info>Source / MIDI Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?metadata:string,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c+1)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>metadata</label>
    <info>Name of the metadata containing the chords.</info>
    <section>
     <label>default</label>
     <info>"chord"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>midi.merge_all</label>
   <info>Merge all MIDI tracks in one.</info>
   <section>
    <label>_category</label>
    <info>Source / MIDI Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?track_out:int,
 source(audio='#a,video='#b,midi='#c+1))-&gt;
source(audio='#a,video='#b,midi='#c+1)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>track_out</label>
    <info>Destination track.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c+1)</info>
    </section>
   </section>
  </section>
  <section>
   <label>midi.remove</label>
   <info>Remove MIDI tracks.</info>
   <section>
    <label>_category</label>
    <info>Source / MIDI Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,[int],source(audio='#a,video='#b,midi='#c+1))-&gt;
source(audio='#a,video='#b,midi='#c+1)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Tracks to remove.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[int]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c+1)</info>
    </section>
   </section>
  </section>
  <section>
   <label>midimeter</label>
   <info>Display midi events.</info>
   <section>
    <label>_category</label>
    <info>Source / Visualization</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>min_int</label>
   <info>Minimal representable integer.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;int</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
  </section>
  <section>
   <label>mix</label>
   <info>Mixing table controllable via the telnet interface.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,[source(audio='#a,video='#b,midi='#c)])-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source(audio='#a,video='#b,midi='#c)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>mksafe</label>
   <info>Turn a source into an infaillible source by adding blank when the source is not available.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"mksafe"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>the source to turn infaillible</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>mod</label>
   <info>Integer remainder. If y is not zero, x == (x / y) * y + x mod y, and abs(x mod y) &lt;= abs(y)-1.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(int,int)-&gt;int</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>mux_audio</label>
   <info>Mux an audio stream into an audio-free stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,audio:source(audio='#a,video=0,midi=0),
 source(audio=0,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>audio</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=0,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>mux_mono</label>
   <info>Mux a mono audio stream into another stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,mono:source(audio=1,video=0,midi=0),
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mono</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=1,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>mux_stereo</label>
   <info>Mux a stereo audio stream into another stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,stereo:source(audio=2,video=0,midi=0),
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a+2,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>stereo</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>mux_video</label>
   <info>Add video channnels to a stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,video:source(audio=0,video='#a,midi=0),
 source(audio='#b,video=0,midi='#c))-&gt;
source(audio='#b,video='#a,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>video</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=0,video='#a,midi=0)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video=0,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>noise</label>
   <info>Generate (audio and/or video) white noise.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float)-&gt;
source(audio='a,video='b,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>normalize</label>
   <info>Normalize the signal. Dynamic normalization of the signal is sometimes the only option, and can make a listening experience much nicer. However, its dynamic aspect implies some limitations which can go as far as creating saturation in some extreme cases. If possible, consider using some track-based normalization techniques such as those based on replay gain. See the documentation for more details.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?gain_max:'a,?gain_min:'b,?k_down:'c,
 ?k_up:'d,?target:'e,?threshold:'f,?window:float,
 source(audio='#g,video='#h,midi='#i))-&gt;
source(audio='#g,video='#h,midi='#i)
where 'a, 'b, 'c, 'd, 'e, 'f is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>gain_max</label>
    <info>Maximal gain value (dB).</info>
    <section>
     <label>default</label>
     <info>6.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>gain_min</label>
    <info>Minimal gain value (dB).</info>
    <section>
     <label>default</label>
     <info>-6.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>k_down</label>
    <info>Coefficient when the power must go down (between 0 and 1, slowest to fastest).</info>
    <section>
     <label>default</label>
     <info>0.1</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>k_up</label>
    <info>Coefficient when the power must go up (between 0 and 1, slowest to fastest).</info>
    <section>
     <label>default</label>
     <info>0.005</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>target</label>
    <info>Desired RMS (dB).</info>
    <section>
     <label>default</label>
     <info>-13.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Minimal RMS for activaing gain control (dB).</info>
    <section>
     <label>default</label>
     <info>-40.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>window</label>
    <info>Duration of the window used to compute the current RMS power (second).</info>
    <section>
     <label>default</label>
     <info>0.1</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#g,video='#h,midi='#i)</info>
    </section>
   </section>
  </section>
  <section>
   <label>not</label>
   <info>Returns the negation of its argument.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>(bool)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>notify_metadata</label>
   <info>Use notify to display metadata info.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>urgency</label>
    <info>Urgency (low|normal|critical).</info>
    <section>
     <label>default</label>
     <info>"low"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>icon</label>
    <info>Icon filename or stock icon to display.</info>
    <section>
     <label>default</label>
     <info>"stock_smiley-22"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>time</label>
    <info>Timeout in milliseconds.</info>
    <section>
     <label>default</label>
     <info>3000</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>display</label>
    <info>Function used to display a metadata packet.</info>
    <section>
     <label>default</label>
     <info>&lt;fun&gt;</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;string</info>
    </section>
   </section>
   <section>
    <label>title</label>
    <info>Title of the notification message.</info>
    <section>
     <label>default</label>
     <info>"Liquidsoap: new track"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?urgency:string,?icon:string,?time:int,
 ?display:(([(string*string)])-&gt;string),?title:string,
 source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>nrj</label>
   <info>Compress and normalize, producing a more uniform and "full" sound.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The input source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>of_json</label>
   <info>Parse a json string into a liquidsoap value.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(default:'a,string)-&gt;'a</info>
   </section>
   <section>
    <label>default</label>
    <info>Default value if string cannot be parsed.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>on_blank</label>
   <info>Calls a given handler when detecting a blank.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?max_blank:float,?min_noise:float,
 ?on_noise:(()-&gt;unit),?threshold:float,
 ?track_sensitive:bool,(()-&gt;unit),
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>max_blank</label>
    <info>Maximum duration of silence allowed, in seconds.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>min_noise</label>
    <info>Minimum duration of noise required to end silence, in seconds.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>on_noise</label>
    <info>Handler called when noise is detected.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Power in decibels under which the stream is considered silent.</info>
    <section>
     <label>default</label>
     <info>-40.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Reset blank counter at each track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Handler called when blank is detected.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>on_end</label>
   <info>Call a given handler when there is less than a given amount of time remaining before then end of track.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:float,
 ((float,[(string*string)])-&gt;unit),source('a))-&gt;
source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Execute handler when remaining time is less or equal to this value.</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Function to execute. First argument is the remaining time, second is the latest metadata.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(float,[(string*string)])-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>on_metadata</label>
   <info>Call a given handler on metadata packets.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,(([(string*string)])-&gt;unit),source('a))-&gt;
source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Function called on every metadata packet in the stream. It should be fast because it is ran in the main thread.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>on_shutdown</label>
   <info>Register a function to be called when Liquidsoap shuts down.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>((()-&gt;unit))-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
  </section>
  <section>
   <label>on_track</label>
   <info>Call a given handler on new tracks.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,(([(string*string)])-&gt;unit),source('a))-&gt;
source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Function called on every beginning of track in the stream, with the corresponding metadata as argument. If there is no metadata at the beginning of track, the empty list is passed. That function should be fast because it is ran in the main thread.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>once</label>
   <info>Creates a source that plays only one track of the input source.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The input source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>or</label>
   <info>Return the disjunction of its arguments</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>(bool,bool)-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
  </section>
  <section>
   <label>os.type</label>
   <info>Type of OS running liquidsoap.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>string</info>
   </section>
  </section>
  <section>
   <label>osd_metadata</label>
   <info>Use X On Screen Display to display metadata info.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>color</label>
    <info>Color of the text.</info>
    <section>
     <label>default</label>
     <info>"green"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>position</label>
    <info>Position of the text (top|middle|bottom).</info>
    <section>
     <label>default</label>
     <info>"top"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>font</label>
    <info>Font used (xfontsel is your friend...)</info>
    <section>
     <label>default</label>
     <info>"-*-courier-*-r-*-*-*-240-*-*-*-*-*-*"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>display</label>
    <info>Function used to display a metadata packet.</info>
    <section>
     <label>default</label>
     <info>&lt;fun&gt;</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?color:string,?position:string,?font:string,
 ?display:(([(string*string)])-&gt;string),source('a))-&gt;
source('a)</info>
   </section>
  </section>
  <section>
   <label>out</label>
   <info>Output a stream using the 'output.prefered' operator. The input source does not need to be infallible, blank will just be played during failures.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>the source to output</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio='#a+1,video='#b,midi='#c))-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>output.alsa</label>
   <info>Output the source's stream to an ALSA output device.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?bufferize:bool,?clock_safe:bool,
 ?device:string,?fallible:bool,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?start:bool,
 source(audio='#a+1,video='#b,midi='#c))-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>bufferize</label>
    <info>Bufferize output</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>clock_safe</label>
    <info>Force the use of the dedicated ALSA clock</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>device</label>
    <info>Alsa device to use</info>
    <section>
     <label>default</label>
     <info>"default"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.dummy</label>
   <info>Dummy output for debugging purposes.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?fallible:bool,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?start:bool,source('a))-&gt;
active_source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.external</label>
   <info>Send the stream to a process' standard input.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?fallible:bool,?flush:bool,
 ?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),
 ?reopen_delay:float,?reopen_on_metadata:bool,
 ?reopen_when:(()-&gt;bool),?start:bool,format('a),string,
 source('a))-&gt;active_source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>flush</label>
    <info>Perform a flush after each write.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>reopen_delay</label>
    <info>Prevent re-opening within that delay, in seconds.</info>
    <section>
     <label>default</label>
     <info>120.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>reopen_on_metadata</label>
    <info>Re-open on every new metadata information.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>reopen_when</label>
    <info>When should the output be re-opened.</info>
    <section>
     <label>default</label>
     <info>{false}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Encoding format.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>format('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Process to pipe data to. Some strftime conversion specifiers are available: &lt;code&gt;%SMHdmY&lt;/code&gt;. You can also use &lt;code&gt;$(..)&lt;/code&gt; interpolation notation for metadata.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.file</label>
   <info>Output the source stream to a file.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?append:bool,?dir_perm:int,?fallible:bool,
 ?flush:bool,?on_close:((string)-&gt;unit),
 ?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),?perm:int,
 ?reopen_delay:float,?reopen_on_metadata:bool,
 ?reopen_when:(()-&gt;bool),?start:bool,format('a),string,
 source('a))-&gt;active_source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>append</label>
    <info>Do not truncate but append in the file if it exists.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>dir_perm</label>
    <info>Permission of the directories if some have to be created, up to umask. Although you can enter values in octal notation (0oXXX) they will be displayed in decimal (for instance, 0o777 = 7*8^2 + 7*8 + 7 = 511).</info>
    <section>
     <label>default</label>
     <info>511</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>flush</label>
    <info>Perform a flush after each write.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_close</label>
    <info>This function will be called for each file, after that it is finished and closed. The filename will be passed as argument.</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; ()</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>perm</label>
    <info>Permission of the file if it has to be created, up to umask. You can and should write this number in octal notation: 0oXXX. The default value is however displayed in decimal (0o666 = 6*8^2 + 6*8 + 6 = 438).</info>
    <section>
     <label>default</label>
     <info>438</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>reopen_delay</label>
    <info>Prevent re-opening within that delay, in seconds.</info>
    <section>
     <label>default</label>
     <info>120.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>reopen_on_metadata</label>
    <info>Re-open on every new metadata information.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>reopen_when</label>
    <info>When should the output be re-opened.</info>
    <section>
     <label>default</label>
     <info>{false}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Encoding format.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>format('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Filename where to output the stream. Some strftime conversion specifiers are available: &lt;code&gt;%SMHdmY&lt;/code&gt;. You can also use &lt;code&gt;$(..)&lt;/code&gt; interpolation notation for metadata.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.harbor</label>
   <info>Encode and output the stream using the harbor server.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?auth:((string,string)-&gt;bool),?buffer:int,
 ?burst:int,?chunk:int,?dumpfile:string,?encoding:string,
 ?fallible:bool,?format:string,
 ?headers:[(string*string)],?metaint:int,mount:string,
 ?on_connect:((headers:[(string*string)],uri:string,
               protocol:string,string)-&gt;unit),
 ?on_disconnect:((string)-&gt;unit),?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?password:string,?port:int,
 ?start:bool,?timeout:float,?url:string,?user:string,
 format('a),source('a))-&gt;active_source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>auth</label>
    <info>Authentication function. &lt;code&gt;f(login,password)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; if the user should be granted access for this login. Override any other method if used.</info>
    <section>
     <label>default</label>
     <info>fun (_,_) -&gt; false</info>
    </section>
    <section>
     <label>type</label>
     <info>(string,string)-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>buffer</label>
    <info>Maximun buffer per-client.</info>
    <section>
     <label>default</label>
     <info>327675</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>burst</label>
    <info>Initial burst of data sent to the client.</info>
    <section>
     <label>default</label>
     <info>65534</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>chunk</label>
    <info>Send data to clients using chunks of at least this length.</info>
    <section>
     <label>default</label>
     <info>1024</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>dumpfile</label>
    <info>Dump stream to file, for debugging purpose. Disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>encoding</label>
    <info>Encoding used to send metadata. If empty, defaults to "ISO-8859-1" for non-ogg formats and "UTF-8" otherwise.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>format</label>
    <info>Format, e.g. "audio/ogg". When empty, the encoder is used to guess.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>headers</label>
    <info>Additional headers.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>metaint</label>
    <info>Interval used to send ICY metadata</info>
    <section>
     <label>default</label>
     <info>16000</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>mount</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>on_connect</label>
    <info>Callback executed when connection is established.</info>
    <section>
     <label>default</label>
     <info>fun (~headers,~uri,~protocol,_) -&gt; ()</info>
    </section>
    <section>
     <label>type</label>
     <info>(headers:[(string*string)],uri:string,protocol:string,
 string)-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_disconnect</label>
    <info>Callback executed when connection stops.</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; ()</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>password</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"hackme"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>8000</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout for network operations.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>url</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>user</label>
    <info>User for client connection, disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Encoding format.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>format('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.icecast</label>
   <info>Encode and output the stream to an icecast2 or shoutcast server.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?chunked:bool,?connection_timeout:float,
 ?description:string,?dumpfile:string,?encoding:string,
 ?fallible:bool,?format:string,?genre:string,
 ?headers:[(string*string)],?host:string,?icy_id:int,
 ?icy_metadata:string,?mount:string,?name:string,
 ?on_connect:(()-&gt;unit),?on_disconnect:(()-&gt;unit),
 ?on_error:((string)-&gt;float),?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?password:string,?port:int,
 ?protocol:string,?public:bool,?start:bool,
 ?timeout:float,?url:string,?user:string,?verb:string,
 format('a),source('a))-&gt;active_source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>chunked</label>
    <info>Used cunked transfer with the 'http' protocol.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>connection_timeout</label>
    <info>Timeout for establishing network connections (disabled is negative).</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>description</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"Liquidsoap Radio!"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>dumpfile</label>
    <info>Dump stream to file, for debugging purpose. Disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>encoding</label>
    <info>Encoding used to send metadata. If empty, defaults to "UTF-8" for "http" protocol and "ISO-8859-1" for "icy" protocol.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>format</label>
    <info>Format, e.g. "audio/ogg". When empty, the encoder is used to guess.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>genre</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"Misc"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>headers</label>
    <info>Additional headers.</info>
    <section>
     <label>default</label>
     <info>[("User-Agent","Liquidsoap/1.2.0 (Unix; OCaml 4.02.3)")]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>host</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"localhost"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>icy_id</label>
    <info>Shoutcast source ID. Only supported by Shoutcast v2.</info>
    <section>
     <label>default</label>
     <info>1</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>icy_metadata</label>
    <info>Send new metadata using the ICY protocol. One of: "guess", "true", "false"</info>
    <section>
     <label>default</label>
     <info>"guess"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mount</label>
    <info>Source mount point. Mandatory when streaming to icecast.</info>
    <section>
     <label>default</label>
     <info>"Use [name] with .ogg extension if relevant"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>name</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"Use [mount]"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>on_connect</label>
    <info>Callback executed when connection is established.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_disconnect</label>
    <info>Callback executed when connection stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_error</label>
    <info>Callback executed when an error happens. The callback receives a string representation of the error that occured and returns a float. If returned value is positive, connection will be tried again after this amount of time (in seconds).</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; 3.</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;float</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>password</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"hackme"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>8000</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>protocol</label>
    <info>Protocol of the streaming server: 'http' for Icecast, 'icy' for shoutcast.</info>
    <section>
     <label>default</label>
     <info>"http"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>public</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout for network read and write.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>url</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"http://savonet.sf.net"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>user</label>
    <info>User for shout source connection. Defaults to "source" for icecast connections. Useful only in special cases, like with per-mountpoint users.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>verb</label>
    <info>Verb to use with the 'http' protocol. One of: 'source', 'put' or 'post'.</info>
    <section>
     <label>default</label>
     <info>"source"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Encoding format.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>format('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.oss</label>
   <info>Output the source's stream to an OSS output device.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?clock_safe:bool,?device:string,
 ?fallible:bool,?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),
 ?start:bool,source(audio='#a+1,video='#b,midi='#c))-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>clock_safe</label>
    <info>Force the use of the dedicated OSS clock.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>device</label>
    <info>OSS device to use.</info>
    <section>
     <label>default</label>
     <info>"/dev/dsp"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.prefered</label>
   <info>Output to local audio card using the first available driver in pulseaudio, portaudio, oss, alsa, ao, dummy.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>id</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?fallible:bool,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?start:bool,
 source(audio='#a+1,video='#b,midi='#c))-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>output.pulseaudio</label>
   <info>Output the source's stream to a portaudio output device.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?client:string,?clock_safe:bool,
 ?device:string,?fallible:bool,?on_start:(()-&gt;unit),
 ?on_stop:(()-&gt;unit),?start:bool,
 source(audio='#a+1,video='#b,midi='#c))-&gt;
active_source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>client</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"liquidsoap"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>clock_safe</label>
    <info>Force the use of the dedicated Pulseaudio clock.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>device</label>
    <info>Device to use. Uses default if set to "".</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>output.shoutcast</label>
   <info>Output to shoutcast.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>id</label>
    <info>Output's ID</info>
    <section>
     <label>default</label>
     <info>"output.shoutcast"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Start output threads on operator initialization.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>host</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"localhost"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>8000</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>user</label>
    <info>User for shout source connection. Useful only in special cases, like with per-mountpoint users.</info>
    <section>
     <label>default</label>
     <info>"source"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>password</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"hackme"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>genre</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"Misc"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>url</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"http://liquidsoap.fm"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>name</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"Liquidsoap Radio!"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>public</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>format</label>
    <info>Format, e.g. "audio/ogg". When empty, the encoder is used to guess.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>dumpfile</label>
    <info>Dump stream to file, for debugging purpose. Disabled if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>icy_metadata</label>
    <info>Send new metadata using the ICY protocol. One of: "guess", "true", "false"</info>
    <section>
     <label>default</label>
     <info>"guess"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>on_connect</label>
    <info>Callback executed when connection starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_disconnect</label>
    <info>Callback executed when connection stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>aim</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>icq</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>irc</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>icy_reset</label>
    <info>Reset shoutcast source buffer upon connecting (necessary for NSV).</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_error</label>
    <info>Callback executed when an error happens. If returned value is positive, connection wll be tried again after this amount of time (in seconds).</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; 3.</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Endoding format. For shoutcast, should be mp3 or AAC(+).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>format('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The source to output</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?start:bool,?host:string,?port:int,
 ?user:string,?password:string,?genre:string,?url:string,
 ?name:string,?public:bool,?format:string,
 ?dumpfile:string,?icy_metadata:string,
 ?on_connect:(()-&gt;unit),?on_disconnect:(()-&gt;unit),
 ?aim:string,?icq:string,?irc:string,?icy_reset:bool,
 ?fallible:bool,?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),
 ?on_error:((string)-&gt;float),format('a),source('a))-&gt;
active_source('a)</info>
   </section>
  </section>
  <section>
   <label>output.udp</label>
   <info>Output encoded data to UDP, without any control whatsoever.</info>
   <section>
    <label>_category</label>
    <info>Source / Output</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?fallible:bool,host:string,
 ?on_start:(()-&gt;unit),?on_stop:(()-&gt;unit),port:int,
 ?start:bool,format('a),source('a))-&gt;active_source('a)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>fallible</label>
    <info>Allow the child source to fail, in which case the output will be (temporarily) stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>host</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>on_start</label>
    <info>Callback executed when outputting starts.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>on_stop</label>
    <info>Callback executed when outputting stops.</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>port</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>start</label>
    <info>Automatically start outputting whenever possible. If true, an infallible (normal) output will start outputting as soon as it is created, and a fallible output will (re)start as soon as its source becomes available for streaming.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Encoding format.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>format('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>path.concat</label>
   <info>Concatenate two paths, using the appropriate directory separator.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>pitch</label>
   <info>Compute the pitch of a sound.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?freq_max:float,?freq_min:float,
 ?length:float,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>freq_max</label>
    <info>Maximal frequency</info>
    <section>
     <label>default</label>
     <info>10000.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>freq_min</label>
    <info>Minimal frequency</info>
    <section>
     <label>default</label>
     <info>40.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>length</label>
    <info>Length in seconds of the analysis window</info>
    <section>
     <label>default</label>
     <info>0.1</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>playlist</label>
   <info>Loop on a playlist of URIs.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?check_next:((request('a))-&gt;bool),
 ?conservative:bool,?default_duration:float,
 ?length:float,?mime_type:string,?mode:string,
 ?prefix:string,?reload:int,?reload_mode:string,
 ?timeout:float,string)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>check_next</label>
    <info>Function used to filter next tracks. A candidate track is only validated if the function returns true on it. The function is called before resolution, hence metadata will only be available for requests corresponding to local files. This is typically used to avoid repetitions, but be careful: if the function rejects all attempts, the playlist will enter into a consuming loop and stop playing anything.</info>
    <section>
     <label>default</label>
     <info>&lt;fun&gt;</info>
    </section>
    <section>
     <label>type</label>
     <info>(request('a))-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>If true, estimated remaining time on the current track is not considered when computing queue length.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>default_duration</label>
    <info>When unknown, assume this duration (in sec.) for files.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>length</label>
    <info>How much audio (in sec.) should be queued in advance.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>mime_type</label>
    <info>Default MIME type for the playlist. Empty string means automatic detection.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mode</label>
    <info>Play the files in the playlist either in the order ("normal" mode), or shuffle the playlist each time it is loaded, and play it in this order for a whole round ("randomize" mode), or pick a random file in the playlist each time ("random" mode).</info>
    <section>
     <label>default</label>
     <info>"randomize"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>prefix</label>
    <info>Add a constant prefix to all requests. Useful for passing extra information using annotate, or for resolution through a particular protocol, such as replaygain.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>reload</label>
    <info>Amount of time (in seconds or rounds), when applicable, before which the playlist is reloaded; 0 means never.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>reload_mode</label>
    <info>Unit of the reload parameter, either 'rounds', 'seconds' or 'watch' (reload the file whenever it is changed).</info>
    <section>
     <label>default</label>
     <info>"seconds"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout (in sec.) for a single download.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>URI where to find the playlist.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>playlist.merge</label>
   <info>Play the whole playlist as one track.</info>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>random</label>
    <info>Randomize playlist content</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Playlist URI.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?random:bool,string)-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>playlist.once</label>
   <info>Custom playlist source written using the script language. It will read directory or playlist, play all files and stop.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>random</label>
    <info>Randomize playlist content</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_done</label>
    <info>Function to execute when the playlist is finished</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>reload_mode</label>
    <info>If set to "watch", will be reloaded when the playlist is changed</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Playlist URI</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?random:bool,?on_done:(()-&gt;unit),
 ?reload_mode:string,string)-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>playlist.parse</label>
   <info>Try to parse a local playlist. Return a list of (metadata,URI) items, where metadata is a list of (key,value) bindings.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;[([(string*string)]*string)]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>playlist.reloadable</label>
   <info>Custom playlist source written using the script language.  Will read directory or playlist, play all files and stop.  Returns a pair @(reload,source)@ where @reload@ is a function of type @(?uri:string)-&gt;unit@ used to reload the source and @source@ is the actual source. The reload function can optionally be called with a new playlist URI. Otherwise, it reloads the previous URI.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>random</label>
    <info>Randomize playlist content</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>on_done</label>
    <info>Function to execute when the playlist is finished</info>
    <section>
     <label>default</label>
     <info>{()}</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
   <section>
    <label>filter</label>
    <info>Filter out some files depending on metadata</info>
    <section>
     <label>default</label>
     <info>fun (_) -&gt; true</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Playlist URI</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?random:bool,?on_done:(()-&gt;unit),
 ?filter:(([(string*string)])-&gt;bool),string)-&gt;
(((?uri:string)-&gt;unit)*source('a))</info>
   </section>
  </section>
  <section>
   <label>playlist.safe</label>
   <info>Loop on a playlist of local files, and never fail. In order to do so, it has to check every file at the loading, so the streamer startup may take a few seconds. To avoid this, use a standard playlist, and put only a few local files in a default safe_playlist in order to ensure the liveness of the streamer.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?mime_type:string,?mode:string,
 ?prefix:string,?reload:int,?reload_mode:string,string)-&gt;
source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mime_type</label>
    <info>Default MIME type for the playlist. Empty string means automatic detection.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>mode</label>
    <info>Play the files in the playlist either in the order ("normal" mode), or shuffle the playlist each time it is loaded, and play it in this order for a whole round ("randomize" mode), or pick a random file in the playlist each time ("random" mode).</info>
    <section>
     <label>default</label>
     <info>"randomize"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>prefix</label>
    <info>Add a constant prefix to all requests. Useful for passing extra information using annotate, or for resolution through a particular protocol, such as replaygain.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>reload</label>
    <info>Amount of time (in seconds or rounds), when applicable, before which the playlist is reloaded; 0 means never.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>reload_mode</label>
    <info>Unit of the reload parameter, either 'rounds', 'seconds' or 'watch' (reload the file whenever it is changed).</info>
    <section>
     <label>default</label>
     <info>"seconds"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>URI where to find the playlist.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>pow</label>
   <info>Exponentiation of numbers.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a,'a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
  <section>
   <label>prepend</label>
   <info>Prepend an extra track before every track. Set the metadata 'liq_prepend' to 'false' to inhibit prepending on one track.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?merge:bool,
 source(audio='#a,video='#b,midi='#c),
 (([(string*string)])-&gt;
  source(audio='#a,video='#b,midi='#c)))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>merge</label>
    <info>Merge the track with its appended track.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Given the metadata, build the source producing the track to prepend. This source is allowed to fail (produce nothing) if no relevant track is to be appended. However, success must be immediate or it will not be taken into account.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>([(string*string)])-&gt;source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>print</label>
   <info>Print on standard output.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?newline:bool,'a)-&gt;unit</info>
   </section>
   <section>
    <label>newline</label>
    <info>If true, a newline is added after displaying the value.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
  </section>
  <section>
   <label>quote</label>
   <info>Escape shell metacharacters.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>random</label>
   <info>At the beginning of every track, select a random ready child.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?replay_metadata:bool,?track_sensitive:bool,
 ?transitions:[(source('a),source('a))-&gt;source('a)],
 ?weights:[int],[source('a)])-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>replay_metadata</label>
    <info>Replay the last metadata of a child when switching to it in the middle of a track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Re-select only on end of tracks.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>transitions</label>
    <info>Transition functions, padded with &lt;code&gt;fun (x,y) -&gt; y&lt;/code&gt; functions.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(source('a),source('a))-&gt;source('a)]</info>
    </section>
   </section>
   <section>
    <label>weights</label>
    <info>Weights of the children (padded with 1), defining for each child the probability that it is selected.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[int]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>random.bool</label>
   <info>Generate a random value.</info>
   <section>
    <label>_category</label>
    <info>Bool</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;bool</info>
   </section>
  </section>
  <section>
   <label>random.float</label>
   <info>Generate a random value.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?min:float,?max:float)-&gt;float</info>
   </section>
   <section>
    <label>min</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>-1000000.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>1000000.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>random.int</label>
   <info>Generate a random value.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?min:float,?max:float)-&gt;int</info>
   </section>
   <section>
    <label>min</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>-4611686018427387904</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>max</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>4611686018427387903</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>read</label>
   <info>Read some value from standard input (console).</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>hide</label>
    <info>Hide typed characters (for passwords).</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?hide:bool)-&gt;string</info>
   </section>
  </section>
  <section>
   <label>register_flow</label>
   <info>Register a radio on Liquidsoap Flows.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>server</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>user</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"default"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>password</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>"default"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>email</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>radio</label>
    <info>Name of the radio.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>website</label>
    <info>URL of the website of the radio.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>description</label>
    <info>Description of the radio.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>genre</label>
    <info>Genre of the radio (rock or rap or etc.).</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>streams</label>
    <info>List of streams for the radio described by a pair of strings consisting of the format of the stream and the url of the stream. The format should be of the form "ogg/128k" consisting of the codec and the bitrate, separated by "/".</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?server:string,?user:string,?password:string,
 ?email:string,radio:string,website:string,
 description:string,genre:string,
 streams:[(string*string)],source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>reopen.stderr</label>
   <info>Reopen standard error on the given file</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>reopen.stdin</label>
   <info>Reopen standard input on the given file</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>reopen.stdout</label>
   <info>Reopen standard output on the given file</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>replaygain_protocol</label>
   <info>Register the replaygain protocol.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string,'a)-&gt;[string]</info>
   </section>
  </section>
  <section>
   <label>request.create</label>
   <info>Create a request. Creation may fail if there is no available RID, which cannot be detected currently: in that case one will obtain a request that will fail to be resolved.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?indicators:[string],?persistent:bool,string)-&gt;
request('a)</info>
   </section>
   <section>
    <label>indicators</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
   <section>
    <label>persistent</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.create.raw</label>
   <info>Create a raw request, i.e. for files that should not be decoded for streaming. Creation may fail if there is no available RID, which cannot be detected currently: in that case one will obtain a request that will fail to be resolved.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?indicators:[string],?persistent:bool,string)-&gt;
request(audio=0,video=0,midi=0)</info>
   </section>
   <section>
    <label>indicators</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
   <section>
    <label>persistent</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.destroy</label>
   <info>Destroying a request causes any temporary associated file to be deleted, and releases its RID. Persistent requests resist to destroying, unless forced.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?force:bool,request('a))-&gt;unit</info>
   </section>
   <section>
    <label>force</label>
    <info>Destroy the request even if it is persistent.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.dynamic</label>
   <info>Play request dynamically created by a given function.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?conservative:bool,?default_duration:float,
 ?length:float,?timeout:float,(()-&gt;request('a)))-&gt;
source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>If true, estimated remaining time on the current track is not considered when computing queue length.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>default_duration</label>
    <info>When unknown, assume this duration (in sec.) for files.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>length</label>
    <info>How much audio (in sec.) should be queued in advance.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout (in sec.) for a single download.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.equeue</label>
   <info>Receive URIs from users, and play them. Insertion and deletion possible at any position.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?conservative:bool,?default_duration:float,
 ?length:float,?timeout:float)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>If true, estimated remaining time on the current track is not considered when computing queue length.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>default_duration</label>
    <info>When unknown, assume this duration (in sec.) for files.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>length</label>
    <info>How much audio (in sec.) should be queued in advance.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout (in sec.) for a single download.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.filename</label>
   <info>Return a valid local filename if the request is ready, and the empty string otherwise.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(request('a))-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.metadata</label>
   <info>Get the metadata associated to a request.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(request('a))-&gt;[(string*string)]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.queue</label>
   <info>Receive URIs from users, and play them.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?conservative:bool,?default_duration:float,
 ?interactive:bool,?length:float,?queue:[request('a)],
 ?timeout:float)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>If true, estimated remaining time on the current track is not considered when computing queue length.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>default_duration</label>
    <info>When unknown, assume this duration (in sec.) for files.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>interactive</label>
    <info>Should the queue be controllable via telnet?</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>length</label>
    <info>How much audio (in sec.) should be queued in advance.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>queue</label>
    <info>Initial queue of requests.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[request('a)]</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout (in sec.) for a single download.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.ready</label>
   <info>Check if a request is ready, i.e. is associated to a valid local file. Unless the initial URI was such a file, a request has to be resolved before being ready.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(request('a))-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>request.resolve</label>
   <info>Resolve a request, i.e. attempt to get a valid local file. The operation can take some time. Return true if the resolving was successful, false otherwise (timeout or invalid URI).</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?timeout:float,request('a))-&gt;bool</info>
   </section>
   <section>
    <label>timeout</label>
    <info>Limit in seconds to the duration of the resolving.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>restart</label>
   <info>Restart the application.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>rewrite_metadata</label>
   <info>Rewrite metadata on the fly using a list of (target,rules).</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>List of (target,value) rewriting rules.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>insert_missing</label>
    <info>Treat track beginnings without metadata as having empty ones. The operational order is: create empty if needed, map and strip if enabled.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>update</label>
    <info>Only update metadata. If false, only returned values will be set as metadata.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>strip</label>
    <info>Completly remove empty metadata. Operates on both empty values and empty metadata chunk.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>([(string*string)],?insert_missing:bool,?update:bool,
 ?strip:bool,source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>rms</label>
   <info>Get current audio RMS volume of the source. Returns a pair @(f,s)@ where s is a new source and @f@ is a function of type @() -&gt; float@ and returns the current RMS of the source.</info>
   <section>
    <label>_category</label>
    <info>Source / Visualization</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:'a,
 source(audio='#b,video='#c,midi='#d))-&gt;
((()-&gt;float)*source(audio='#b,video='#c,midi='#d))
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the RMS window (in seconds). A value &lt;= 0, means that RMS computation should not be performed.</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>rms.stereo</label>
   <info>Get current audio RMS volume of the source. Returns a pair @(f,s)@ where s is a new source and @f@ is a function of type @() -&gt; float@ and returns the current RMS of the source.</info>
   <section>
    <label>_category</label>
    <info>Source / Visualization</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:'a,
 source(audio='#b+2,video='#c,midi='#d))-&gt;
((()-&gt;(float*float))*
 source(audio='#b+2,video='#c,midi='#d))
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the RMS window (in seconds). A value &lt;= 0, means that RMS computation should not be performed.</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b+2,video='#c,midi='#d)</info>
    </section>
   </section>
  </section>
  <section>
   <label>rotate</label>
   <info>Rotate between the sources.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?replay_metadata:bool,?track_sensitive:bool,
 ?transitions:[(source('a),source('a))-&gt;source('a)],
 ?weights:[int],[source('a)])-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>replay_metadata</label>
    <info>Replay the last metadata of a child when switching to it in the middle of a track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Re-select only on end of tracks.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>transitions</label>
    <info>Transition functions, padded with &lt;code&gt;fun (x,y) -&gt; y&lt;/code&gt; functions.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(source('a),source('a))-&gt;source('a)]</info>
    </section>
   </section>
   <section>
    <label>weights</label>
    <info>Weights of the children (padded with 1), defining for each child how many tracks are played from it per round, if that many are actually available.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[int]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>saw</label>
   <info>Generate a saw wave.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude:float,?duration:float,?float)-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude</label>
    <info>Maximal value of the waveform.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration in seconds (0. means infinite).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Frequency of the saw.</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>say_metadata</label>
   <info>Append speech-synthesized tracks reading the metadata.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The source to use</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(?A)</info>
    </section>
   </section>
   <section>
    <label>pattern</label>
    <info>Pattern to use</info>
    <section>
     <label>default</label>
     <info>"say:$(if $(artist),\"It was $(artist)$(if $(title),\\\", $(title)\\\").\")"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(?A),?pattern:string)-&gt;source(?A)</info>
   </section>
  </section>
  <section>
   <label>sequence</label>
   <info>Play only one track of every successive source, except for the last one which is played as much as available. Sources are released after being used, allowing them to shutdown cleanly and free their resources.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?merge:bool,[source('a)])-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>merge</label>
    <info>Merge tracks when advancing from one source to the next one. This will NOT merge consecutive tracks from the last source; see merge_tracks() if you need that too.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>server.execute</label>
   <info>Execute a liquidsoap server command.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,?string)-&gt;[string]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>server.insert_metadata</label>
   <info>Register a server/telnet command to update a source's metadata. Returns a new source, which will receive the updated metadata. The command has the following format: insert key1="val1",key2="val2",...</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source('a))-&gt;source('a)</info>
   </section>
  </section>
  <section>
   <label>server.register</label>
   <info>Register a command. You can then execute this function through the server, either telnet or socket.</info>
   <section>
    <label>_category</label>
    <info>Interaction</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?namespace:string,?description:string,?usage:string,
 string,((string)-&gt;string))-&gt;unit</info>
   </section>
   <section>
    <label>namespace</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>description</label>
    <info>A description of your command.</info>
    <section>
     <label>default</label>
     <info>"No documentation available."</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>usage</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;string</info>
    </section>
   </section>
  </section>
  <section>
   <label>server.rms</label>
   <info>Register a command that outputs the RMS of the returned source.</info>
   <section>
    <label>_category</label>
    <info>Source / Visualization</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>set</label>
   <info>Change some setting. Use &lt;code&gt;liquidsoap --conf-descr&lt;/code&gt; and &lt;code&gt;liquidsoap --conf-descr-key KEY&lt;/code&gt; on the command-line to get some information about available settings.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,'a)-&gt;unit
where 'a is bool, int, float, string or [string]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is bool, int, float, string or [string]</info>
    </section>
   </section>
  </section>
  <section>
   <label>setenv</label>
   <info>Set the value associated to a variable in the process environment.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string,string)-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Variable to be set.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Value to set.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>shutdown</label>
   <info>Shutdown the application.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>()-&gt;unit</info>
   </section>
  </section>
  <section>
   <label>sine</label>
   <info>Generate a sine wave.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude:float,?duration:float,?float)-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude</label>
    <info>Maximal value of the waveform.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration in seconds (0. means infinite).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Frequency of the sine.</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>single</label>
   <info>Loop on a request. It never fails if the request is static, meaning that it can be fetched once. Typically, http, ftp, say requests are static, and time is not.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?conservative:bool,?default_duration:float,
 ?length:float,?timeout:float,string)-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>If true, estimated remaining time on the current track is not considered when computing queue length.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>default_duration</label>
    <info>When unknown, assume this duration (in sec.) for files.</info>
    <section>
     <label>default</label>
     <info>30.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>length</label>
    <info>How much audio (in sec.) should be queued in advance.</info>
    <section>
     <label>default</label>
     <info>10.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>timeout</label>
    <info>Timeout (in sec.) for a single download.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>URI where to find the file</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>skip_blank</label>
   <info>Skip track when detecting a blank.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Power in decibels under which the stream is considered silent.</info>
    <section>
     <label>default</label>
     <info>-40.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>max_blank</label>
    <info>Maximum silence length allowed, in seconds.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>min_noise</label>
    <info>Minimum duration of noise required to end silence, in seconds.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Reset blank counter at each track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?threshold:float,?max_blank:float,
 ?min_noise:float,?track_sensitive:bool,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
  </section>
  <section>
   <label>sky</label>
   <info>Multiband-compression.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The input source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio='#a,video='#b,midi=0))-&gt;
source(audio='#a,video='#b,midi=0)</info>
   </section>
  </section>
  <section>
   <label>sleeper</label>
   <info>Sleep at each frame. Useful for emulating network delays, etc.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?delay:float,?freeze:float,?random:float,
 source(audio='#a,video='#b,midi='#c))-&gt;
source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>delay</label>
    <info>Amount of time to sleep at each frame, the unit being the frame length.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>freeze</label>
    <info>Freeze after given amount of time (don't freeze if negative).</info>
    <section>
     <label>default</label>
     <info>-1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>random</label>
    <info>Maximal random amount of time added (unit is frame length).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>smart_cross</label>
   <info>Cross operator, allowing the composition of the N last seconds of a track with the beginning of the next track, using a transition function depending on the relative power of the signal before and after the end of track.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?active:bool,?conservative:bool,
 ?duration:float,?inhibit:float,?minimum:float,
 ?width:float,
 ((float,float,[(string*string)],[(string*string)],
   source(audio='#a+1,video=0,midi=0),
   source(audio='#a+1,video=0,midi=0))-&gt;
  source(audio='#a+1,video=0,midi=0)),
 source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>active</label>
    <info>The active behavior is to keep ticking the child's clock when the operator is not streaming. Otherwise the child's clock is strictly based on what is streamed off the child source, which results in time-dependent active sources to be frozen when that source is stopped.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>Do not trust remaining time estimations, always buffering data in advance. This avoids being tricked by skips, either manual or caused by skip_blank().</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration in seconds of the crossed end of track.</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>inhibit</label>
    <info>Minimum delay between two transitions. It is useful in order to avoid that a transition is triggered on top of another when an end-of-track occurs in the first one. Negative values mean &lt;code&gt;duration+1&lt;/code&gt;. Warning: zero inhibition can cause infinite loops.</info>
    <section>
     <label>default</label>
     <info>-1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>minimum</label>
    <info>Minimum duration (in sec.) for a cross: If the track ends without any warning (e.g. in case of skip) there may not be enough data for a decent composition. Set to 0. to avoid having transitions after skips, or more to avoid transitions on short tracks. With the negative default, transitions always occur.</info>
    <section>
     <label>default</label>
     <info>-1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>width</label>
    <info>Width of the power computation window.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Transition function, composing from the end of a track and the next track. It also takes the power of the signal before and after the transition, and the metadata.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(float,float,[(string*string)],[(string*string)],
 source(audio='#a+1,video=0,midi=0),
 source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>smart_crossfade</label>
   <info>Crossfade between tracks, taking the respective volume levels into account in the choice of the transition.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>start_next</label>
    <info>Crossing duration, if any.</info>
    <section>
     <label>default</label>
     <info>5.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>fade_in</label>
    <info>Fade-in duration, if any.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>fade_out</label>
    <info>Fade-out duration, if any.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>default</label>
    <info>Transition used when no rule applies (default: sequence).</info>
    <section>
     <label>default</label>
     <info>&lt;fun&gt;</info>
    </section>
    <section>
     <label>type</label>
     <info>(source(audio='#a+1,video=0,midi=0),
 source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>high</label>
    <info>Value, in dB, for loud sound level.</info>
    <section>
     <label>default</label>
     <info>-15.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>medium</label>
    <info>Value, in dB, for medium sound level.</info>
    <section>
     <label>default</label>
     <info>-32.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>margin</label>
    <info>Margin to detect sources that have too different sound level for crossing.</info>
    <section>
     <label>default</label>
     <info>4.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>width</label>
    <info>Width of the volume analysis window.</info>
    <section>
     <label>default</label>
     <info>2.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>conservative</label>
    <info>Always prepare for a premature end-of-track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>The input source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?start_next:float,?fade_in:float,?fade_out:float,
 ?default:((source(audio='#a+1,video=0,midi=0),
            source(audio='#a+1,video=0,midi=0))-&gt;
           source(audio='#a+1,video=0,midi=0)),
 ?high:float,?medium:float,?margin:float,?width:float,
 ?conservative:bool,source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
  </section>
  <section>
   <label>smooth_add</label>
   <info>Mixes two streams, with faded transitions between the state when only the normal stream is available and when the special stream gets added on top of it.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>delay</label>
    <info>Delay before starting the special source.</info>
    <section>
     <label>default</label>
     <info>0.5</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>p</label>
    <info>Portion of amplitude of the normal source in the mix.</info>
    <section>
     <label>default</label>
     <info>0.2</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>normal</label>
    <info>The normal source, which could be called the carrier too.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi=0)</info>
    </section>
   </section>
   <section>
    <label>special</label>
    <info>The special source.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?delay:float,?p:float,
 normal:source(audio='#a,video='#b,midi=0),
 special:source(audio='#a,video='#b,midi=0))-&gt;
source(audio='#a,video='#b,midi=0)</info>
   </section>
  </section>
  <section>
   <label>snd</label>
   <info>Get the second component of a pair.</info>
   <section>
    <label>_category</label>
    <info>Pair</info>
   </section>
   <section>
    <label>_type</label>
    <info>(('a*'b))-&gt;'b</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>('a*'b)</info>
    </section>
   </section>
  </section>
  <section>
   <label>soundtouch</label>
   <info>Change the rate, the tempo or the pitch of the sound.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?pitch:'a,?rate:'b,?tempo:'c,
 source(audio='#d+1,video=0,midi=0))-&gt;
source(audio='#d+1,video=0,midi=0)
where 'a, 'b, 'c is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>pitch</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>rate</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>tempo</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#d+1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.dynamic</label>
   <info>Dynamically change the underlying source.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,(()-&gt;[source('a)]))-&gt;source('a)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>experimental</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;[source('a)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.fallible</label>
   <info>Indicate if a source may fail, i.e. may not be ready to stream.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.id</label>
   <info>Get one source's identifier.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.init</label>
   <info>Simultaneously initialize sources, return the sublist of sources that failed to initialized.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>([source(audio=*,video=*,midi=*)])-&gt;
[source(audio=*,video=*,midi=*)]</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source(audio=*,video=*,midi=*)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.is_ready</label>
   <info>Indicate if a source is ready to stream, or currently streaming.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.is_up</label>
   <info>Check whether a source is up.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;bool</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.on_shutdown</label>
   <info>Register a function to be called when source shuts down.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a),(()-&gt;unit))-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>()-&gt;unit</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.remaining</label>
   <info>Estimation of remaining time in the current track.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.seek</label>
   <info>Seek forward, in seconds. Returns the amount of time effectively seeked.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a),float)-&gt;float</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.shutdown</label>
   <info>Desactivate a source.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>source.skip</label>
   <info>Skip to the next track.</info>
   <section>
    <label>_category</label>
    <info>Liquidsoap</info>
   </section>
   <section>
    <label>_type</label>
    <info>(source('a))-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>square</label>
   <info>Generate a square wave.</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?amplitude:float,?duration:float,?float)-&gt;
source(audio='#a+1,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>amplitude</label>
    <info>Maximal value of the waveform.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration in seconds (0. means infinite).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Frequency of the square.</info>
    <section>
     <label>default</label>
     <info>440.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
  </section>
  <section>
   <label>stereo.left</label>
   <info>Extract the left channel of a stereo source</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Source to extract from</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)</info>
   </section>
  </section>
  <section>
   <label>stereo.ms.decode</label>
   <info>Decode mid+side stereo (M/S) to left+right stereo.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?width:float,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>width</label>
    <info>Width of the stereo field.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>stereo.ms.encode</label>
   <info>Encode left+right stereo to mid+side stereo (M/S).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>stereo.pan</label>
   <info>Pan a stereo sound.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?field:'a,?pan:'b,
 source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>field</label>
    <info>Field width in degrees (between 0 and 90).</info>
    <section>
     <label>default</label>
     <info>90.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>pan</label>
    <info>Pan ranges between -1 and 1.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>stereo.right</label>
   <info>Extract the right channel of a stereo source</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Source to extract from</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(source(audio=2,video=0,midi=0))-&gt;
source(audio=1,video=0,midi=0)</info>
   </section>
  </section>
  <section>
   <label>store_metadata</label>
   <info>Keep track of the last N metadata packets in the stream, and make the history available via a server command.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?size:int,source('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>size</label>
    <info>Size of the history</info>
    <section>
     <label>default</label>
     <info>10</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>stretch</label>
   <info>Slow down or accelerate an audio stream by stretching (sounds lower) or squeezing it (sounds higher).</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?active:bool,ratio:'a,
 source(audio='#b+1,video=0,midi=0))-&gt;
source(audio='#c+1,video=0,midi=0)
where 'a is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>active</label>
    <info>The active behavior is to keep ticking the child's clock when the operator is not streaming. Otherwise the child's clock is strictly based on what is streamed off the child source, which results in time-dependent active sources to be frozen when that source is stopped.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>ratio</label>
    <info>A value higher than 1 means slowing down.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b+1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.capitalize</label>
   <info>Return a string with the first character set to upper case (capitalize), or to lower case (uncapitalize).</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?capitalize:bool,?space_sensitive:bool,string)-&gt;string</info>
   </section>
   <section>
    <label>capitalize</label>
    <info>Capitalize if true, uncapitalize otherwise</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>space_sensitive</label>
    <info>Capitalize each space separated sub-string.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.case</label>
   <info>Convert a string to lower or upper case.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?lower:bool,string)-&gt;string</info>
   </section>
   <section>
    <label>lower</label>
    <info>Convert to lower case if true and uppercase otherwise.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.concat</label>
   <info>Concatenate strings.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?separator:string,[string])-&gt;string</info>
   </section>
   <section>
    <label>separator</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.escape</label>
   <info>Escape special charaters in a string. String is parsed char by char. See @string.utf8.escape@ for an UTF8-aware parsing function.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?special_chars:[string],?escape_char:((string)-&gt;string),
 string)-&gt;string</info>
   </section>
   <section>
    <label>special_chars</label>
    <info>List of characters that should be escaped. The first character of each element in the list is considered.</info>
    <section>
     <label>default</label>
     <info>["\127", "\\", "\"", "\000", "\001", "\002", "\003", "\004", "\005", "\006", "\007", "\b", "\t", "\n", "\011", "\012", "\r", "\014", "\015", "\016", "\017", "\018", "\019", "\020", "\021", "\022", "\023", "\024", "\025", "\026", "\027", "\028", "\029", "\030", "\031"]</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
   <section>
    <label>escape_char</label>
    <info>Function used to escape a character.</info>
    <section>
     <label>default</label>
     <info>&lt;fun&gt;</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.extract</label>
   <info>Extract substrings from a string. 
Perl compatible regular expressions are recognized. Hence, special characters should be escaped. 
Returns a list of (index,value).
If the list does not have a pair associated to some index, it means that the corresponding pattern was not found.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(pattern:string,string)-&gt;[(string*string)]</info>
   </section>
   <section>
    <label>pattern</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.length</label>
   <info>Get the length of a string.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;int</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.match</label>
   <info>Match a string with an expression. 
Perl compatible regular expressions are recognized. Hence, special characters should be escaped.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(pattern:string,string)-&gt;bool</info>
   </section>
   <section>
    <label>pattern</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.recode</label>
   <info>Convert a string. Effective only if Camomile is enabled.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?in_enc:string,?out_enc:string,string)-&gt;string</info>
   </section>
   <section>
    <label>in_enc</label>
    <info>Input encoding. Autodetected if empty.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>out_enc</label>
    <info>Output encoding.</info>
    <section>
     <label>default</label>
     <info>"UTF-8"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.replace</label>
   <info>Replace substrings in a string. 
Will replace all substrings matched in the pattern by the string returned by the replace function.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(pattern:string,((string)-&gt;string),string)-&gt;string</info>
   </section>
   <section>
    <label>pattern</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.split</label>
   <info>Split a string at 'separator'. 
Perl compatible regular expressions are recognized. Hence, special characters should be escaped.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(separator:string,string)-&gt;[string]</info>
   </section>
   <section>
    <label>separator</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string.utf8.escape</label>
   <info>Escape special charaters in an UTF8 string.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?special_chars:[string],?escape_char:((string)-&gt;string),
 string)-&gt;string</info>
   </section>
   <section>
    <label>special_chars</label>
    <info>List of characters that should be escaped. The first character of each element in the list is considered.</info>
    <section>
     <label>default</label>
     <info>["\127", "\\", "\"", "\000", "\001", "\002", "\003", "\004", "\005", "\006", "\007", "\b", "\t", "\n", "\011", "\012", "\r", "\014", "\015", "\016", "\017", "\018", "\019", "\020", "\021", "\022", "\023", "\024", "\025", "\026", "\027", "\028", "\029", "\030", "\031"]</info>
    </section>
    <section>
     <label>type</label>
     <info>[string]</info>
    </section>
   </section>
   <section>
    <label>escape_char</label>
    <info>Function used to escape a character.</info>
    <section>
     <label>default</label>
     <info>&lt;fun&gt;</info>
    </section>
    <section>
     <label>type</label>
     <info>(string)-&gt;string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>string_of</label>
   <info>Return the representation of a value.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a)-&gt;string</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
  </section>
  <section>
   <label>string_of_metadata</label>
   <info>Standard function for displaying metadata.
Shows artist and title, using "Unknown" when a field is empty.</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Metadata packet to be displayed.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[(string*string)]</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>([(string*string)])-&gt;string</info>
   </section>
  </section>
  <section>
   <label>strip_blank</label>
   <info>Make the source unavailable when it is streaming blank.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?max_blank:float,?min_noise:float,
 ?threshold:float,?track_sensitive:bool,
 source(audio='#a,video='#b,midi='#c))-&gt;
active_source(audio='#a,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>max_blank</label>
    <info>Maximum duration of silence allowed, in seconds.</info>
    <section>
     <label>default</label>
     <info>20.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>min_noise</label>
    <info>Minimum duration of noise required to end silence, in seconds.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>threshold</label>
    <info>Power in decibels under which the stream is considered silent.</info>
    <section>
     <label>default</label>
     <info>-40.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Reset blank counter at each track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>swap</label>
   <info>Swap two channels of a stereo source.</info>
   <section>
    <label>_category</label>
    <info>Source / Conversions</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio=2,video=0,midi=0))-&gt;
source(audio=2,video=0,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio=2,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>switch</label>
   <info>At the beginning of a track, select the first source whose predicate is true.</info>
   <section>
    <label>_category</label>
    <info>Source / Track Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?replay_metadata:bool,?single:[bool],
 ?track_sensitive:bool,
 ?transitions:[(source('a),source('a))-&gt;source('a)],
 [((()-&gt;bool)*source('a))])-&gt;source('a)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>replay_metadata</label>
    <info>Replay the last metadata of a child when switching to it in the middle of a track.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>single</label>
    <info>Forbid the selection of a branch for two tracks in a row. The empty list stands for &lt;code&gt;[false,...,false]&lt;/code&gt;.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[bool]</info>
    </section>
   </section>
   <section>
    <label>track_sensitive</label>
    <info>Re-select only on end of tracks.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>transitions</label>
    <info>Transition functions, padded with &lt;code&gt;fun (x,y) -&gt; y&lt;/code&gt; functions.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[(source('a),source('a))-&gt;source('a)]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Sources with the predicate telling when they can be played.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[((()-&gt;bool)*source('a))]</info>
    </section>
   </section>
  </section>
  <section>
   <label>synth.all.saw</label>
   <info>Saw synthesizer. It creates one synthesizer for each channel.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Synthesis</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:float,?decay:float,?envelope:bool,
 ?release:float,?sustain:float,
 source(audio='#a+1,video='#b,midi='#c+16))-&gt;
source(audio='#a+1,video='#b,midi='#c+16)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Envelope attack (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.02</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Envelope decay (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>envelope</label>
    <info>Use envelope.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Envelope release (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>sustain</label>
    <info>Envelope sustain level.</info>
    <section>
     <label>default</label>
     <info>0.9</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c+16)</info>
    </section>
   </section>
  </section>
  <section>
   <label>synth.all.sine</label>
   <info>Sine synthesizer. It creates one synthesizer for each channel.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Synthesis</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:float,?decay:float,?envelope:bool,
 ?release:float,?sustain:float,
 source(audio='#a+1,video='#b,midi='#c+16))-&gt;
source(audio='#a+1,video='#b,midi='#c+16)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Envelope attack (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.02</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Envelope decay (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>envelope</label>
    <info>Use envelope.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Envelope release (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>sustain</label>
    <info>Envelope sustain level.</info>
    <section>
     <label>default</label>
     <info>0.9</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c+16)</info>
    </section>
   </section>
  </section>
  <section>
   <label>synth.all.square</label>
   <info>Square synthesizer. It creates one synthesizer for each channel.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Synthesis</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:float,?decay:float,?envelope:bool,
 ?release:float,?sustain:float,
 source(audio='#a+1,video='#b,midi='#c+16))-&gt;
source(audio='#a+1,video='#b,midi='#c+16)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Envelope attack (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.02</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Envelope decay (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>envelope</label>
    <info>Use envelope.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Envelope release (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>sustain</label>
    <info>Envelope sustain level.</info>
    <section>
     <label>default</label>
     <info>0.9</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c+16)</info>
    </section>
   </section>
  </section>
  <section>
   <label>synth.saw</label>
   <info>Saw synthesizer.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Synthesis</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:float,?channel:int,?decay:float,
 ?envelope:bool,?release:float,?sustain:float,
 ?volume:float,source(audio='#a+1,video='#b,midi='#c+1))-&gt;
source(audio='#a+1,video='#b,midi='#c+1)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Envelope attack (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.02</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>channel</label>
    <info>MIDI channel to handle.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Envelope decay (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>envelope</label>
    <info>Use envelope.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Envelope release (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.05</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>sustain</label>
    <info>Envelope sustain level.</info>
    <section>
     <label>default</label>
     <info>0.9</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>volume</label>
    <info>Initial volume.</info>
    <section>
     <label>default</label>
     <info>0.3</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c+1)</info>
    </section>
   </section>
  </section>
  <section>
   <label>synth.sine</label>
   <info>Sine synthesizer.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Synthesis</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:float,?channel:int,?decay:float,
 ?envelope:bool,?release:float,?sustain:float,
 ?volume:float,source(audio='#a+1,video='#b,midi='#c+1))-&gt;
source(audio='#a+1,video='#b,midi='#c+1)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Envelope attack (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.02</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>channel</label>
    <info>MIDI channel to handle.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Envelope decay (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>envelope</label>
    <info>Use envelope.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Envelope release (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.05</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>sustain</label>
    <info>Envelope sustain level.</info>
    <section>
     <label>default</label>
     <info>0.9</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>volume</label>
    <info>Initial volume.</info>
    <section>
     <label>default</label>
     <info>0.3</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c+1)</info>
    </section>
   </section>
  </section>
  <section>
   <label>synth.square</label>
   <info>Square synthesizer.</info>
   <section>
    <label>_category</label>
    <info>Source / Sound Synthesis</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?attack:float,?channel:int,?decay:float,
 ?envelope:bool,?release:float,?sustain:float,
 ?volume:float,source(audio='#a+1,video='#b,midi='#c+1))-&gt;
source(audio='#a+1,video='#b,midi='#c+1)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>attack</label>
    <info>Envelope attack (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.02</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>channel</label>
    <info>MIDI channel to handle.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>decay</label>
    <info>Envelope decay (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.01</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>envelope</label>
    <info>Use envelope.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>release</label>
    <info>Envelope release (in seconds).</info>
    <section>
     <label>default</label>
     <info>0.05</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>sustain</label>
    <info>Envelope sustain level.</info>
    <section>
     <label>default</label>
     <info>0.9</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>volume</label>
    <info>Initial volume.</info>
    <section>
     <label>default</label>
     <info>0.3</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c+1)</info>
    </section>
   </section>
  </section>
  <section>
   <label>system</label>
   <info>Shell command call. Set verbose to true to log process' output and errors.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;unit</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>test_process</label>
   <info>Return true if process exited with 0 code. Command should return quickly.</info>
   <section>
    <label>_category</label>
    <info>System</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Command to test</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;bool</info>
   </section>
  </section>
  <section>
   <label>time_in_mod</label>
   <info>INTERNAL: time_in_mod(a,b,c) checks that the unix time T satisfies a &lt;= T mod c &lt; b</info>
   <section>
    <label>_category</label>
    <info>Other</info>
   </section>
   <section>
    <label>_type</label>
    <info>(int,int,int)-&gt;bool</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
  </section>
  <section>
   <label>unsafe.single.infallible</label>
   <info>Loops on a request, which has to be ready and should be persistent. WARNING: if used uncarefully, it can crash your application!</info>
   <section>
    <label>_category</label>
    <info>Source / Input</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,request('a))-&gt;source('a)</info>
   </section>
   <section>
    <label>_flag</label>
    <info>hidden</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>request('a)</info>
    </section>
   </section>
  </section>
  <section>
   <label>url.decode</label>
   <info>Decode an encoded url (e.g. "%20" becomes " ").</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?plus:bool,string)-&gt;string</info>
   </section>
   <section>
    <label>plus</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>url.encode</label>
   <info>Encode an url (e.g. " " becomes "%20").</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?plus:bool,string)-&gt;string</info>
   </section>
   <section>
    <label>plus</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
  </section>
  <section>
   <label>url.split</label>
   <info>Split an url of the form foo?arg=bar&amp;arg2=bar2 into ("foo",[("arg","bar"),("arg2","bar2")]).</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Url to split</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;(string*[(string*string)])</info>
   </section>
  </section>
  <section>
   <label>url.split_args</label>
   <info>Split the arguments of an url of the form arg=bar&amp;arg2=bar2 into [("arg","bar"),("arg2","bar2")].</info>
   <section>
    <label>_category</label>
    <info>String</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Agument string to split</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(string)-&gt;[(string*string)]</info>
   </section>
  </section>
  <section>
   <label>video.add_image</label>
   <info>Add a static image on the first video channel.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>width</label>
    <info>Scale to width (zero means frame width, negative means original width).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>height</label>
    <info>Scale to height (zero means frame height, negative means original height).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>x</label>
    <info>x position.</info>
    <section>
     <label>default</label>
     <info>4611686018427387903</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>y</label>
    <info>y position.</info>
    <section>
     <label>default</label>
     <info>4611686018427387903</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>file</label>
    <info>Path to the image file.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>'a</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#b,video='#c,midi=0)</info>
    </section>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?width:int,?height:int,?x:int,?y:int,file:'a,
 source(audio='#b,video='#c,midi=0))-&gt;
source(audio='#b,video='#c,midi=0)</info>
   </section>
  </section>
  <section>
   <label>video.fade.final</label>
   <info>Fade a stream to black.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?transition:string,
 ?type:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>transition</label>
    <info>Kind of transition (fade|slide_left|slide_right|slide_up|slide_down|grow|disc|random).</info>
    <section>
     <label>default</label>
     <info>"fade"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.fade.in</label>
   <info>Fade the beginning of tracks. Metadata 'liq_video_fade_in' can be used to set the duration for a specific track (float in seconds).</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?override:string,
 ?transition:string,?type:string,
 source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_video_fade_in"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>transition</label>
    <info>Kind of transition (fade|slide_left|slide_right|slide_up|slide_down|grow|disc|random).</info>
    <section>
     <label>default</label>
     <info>"fade"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.fade.initial</label>
   <info>Fade the beginning of a stream.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?transition:string,
 ?type:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>transition</label>
    <info>Kind of transition (fade|slide_left|slide_right|slide_up|slide_down|grow|disc|random).</info>
    <section>
     <label>default</label>
     <info>"fade"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.fade.out</label>
   <info>Fade the end of tracks. Metadata 'liq_video_fade_out' can be used to set the duration for a specific track (float in seconds).</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?duration:float,?override:string,
 ?transition:string,?type:string,
 source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>duration</label>
    <info>Duration of the fading. This value can be set on a per-file basis using the metadata field passed as override.</info>
    <section>
     <label>default</label>
     <info>3.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>override</label>
    <info>Metadata field which, if present and containing a float, overrides the 'duration' parameter for current track.</info>
    <section>
     <label>default</label>
     <info>"liq_video_fade_out"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>transition</label>
    <info>Kind of transition (fade|slide_left|slide_right|slide_up|slide_down|grow|disc|random).</info>
    <section>
     <label>default</label>
     <info>"fade"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>type</label>
    <info>Fader shape (lin|sin|log|exp): linear, sinusoidal, logarithmic or exponential.</info>
    <section>
     <label>default</label>
     <info>"lin"</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.fill</label>
   <info>Fill frame with a color.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?color:int,
 source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>color</label>
    <info>Color to fill the image with.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.greyscale</label>
   <info>Convert video to greyscale.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.invert</label>
   <info>Invert video.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.lomo</label>
   <info>Emulate the "Lomo effect".</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.opacity</label>
   <info>Scale opacity of video.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,float,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>Coefficient to scale opacity with.</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.opacity.blur</label>
   <info>Blur opacity of video.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.rotate</label>
   <info>Rotate video.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?angle:'a,?speed:'b,
 source(audio='#c,video='#d+1,midi='#e))-&gt;
source(audio='#c,video='#d+1,midi='#e)
where 'a, 'b is either float or ()-&gt;float</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>angle</label>
    <info>Initial angle in radians.</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>speed</label>
    <info>Rotation speed in radians per sec.</info>
    <section>
     <label>default</label>
     <info>3.14159265359</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is either float or ()-&gt;float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#c,video='#d+1,midi='#e)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.scale</label>
   <info>Scale and translate video.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?scale:float,?x:int,?xscale:float,?y:int,
 ?yscale:float,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>scale</label>
    <info>Scaling coefficient in both directions.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>x</label>
    <info>x offset.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>xscale</label>
    <info>x scaling.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>y</label>
    <info>y offset.</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>yscale</label>
    <info>y scaling.</info>
    <section>
     <label>default</label>
     <info>1.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.sepia</label>
   <info>Convert video to sepia.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.tile</label>
   <info>Tile sources (same as add but produces tiles of videos).</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?normalize:bool,?proportional:bool,
 ?weights:[int],[source(audio='#a,video='#b+1,midi='#c)])-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>normalize</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>proportional</label>
    <info>Scale preserving the proportions.</info>
    <section>
     <label>default</label>
     <info>true</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>weights</label>
    <info>Relative weight of the sources in the sum. The empty list stands for the homogeneous distribution.</info>
    <section>
     <label>default</label>
     <info>[]</info>
    </section>
    <section>
     <label>type</label>
     <info>[int]</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>[source(audio='#a,video='#b+1,midi='#c)]</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.transparent</label>
   <info>Set a color to be transparent.</info>
   <section>
    <label>_category</label>
    <info>Source / Video Processing</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?color:int,?precision:float,
 source(audio='#a,video='#b+1,midi='#c))-&gt;
source(audio='#a,video='#b+1,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>color</label>
    <info>Color which should be transparent (in 0xRRGGBB format).</info>
    <section>
     <label>default</label>
     <info>0</info>
    </section>
    <section>
     <label>type</label>
     <info>int</info>
    </section>
   </section>
   <section>
    <label>precision</label>
    <info>Precision in color matching (0. means match precisely the color and 1. means match every color).</info>
    <section>
     <label>default</label>
     <info>0.</info>
    </section>
    <section>
     <label>type</label>
     <info>float</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a,video='#b+1,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>video.volume</label>
   <info>Graphical visualization of the sound.</info>
   <section>
    <label>_category</label>
    <info>Source / Visualization</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,source(audio='#a+1,video=0,midi=0))-&gt;
source(audio='#a+1,video=1,midi=0)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video=0,midi=0)</info>
    </section>
   </section>
  </section>
  <section>
   <label>vumeter</label>
   <info>VU meter (display the audio volume).</info>
   <section>
    <label>_category</label>
    <info>Source / Visualization</info>
   </section>
   <section>
    <label>_type</label>
    <info>(?id:string,?scroll:bool,
 source(audio='#a+1,video='#b,midi='#c))-&gt;
source(audio='#a+1,video='#b,midi='#c)</info>
   </section>
   <section>
    <label>id</label>
    <info>Force the value of the source ID.</info>
    <section>
     <label>default</label>
     <info>""</info>
    </section>
    <section>
     <label>type</label>
     <info>string</info>
    </section>
   </section>
   <section>
    <label>scroll</label>
    <info>Scroll.</info>
    <section>
     <label>default</label>
     <info>false</info>
    </section>
    <section>
     <label>type</label>
     <info>bool</info>
    </section>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>source(audio='#a+1,video='#b,midi='#c)</info>
    </section>
   </section>
  </section>
  <section>
   <label>~-</label>
   <info>Returns the opposite of its argument.</info>
   <section>
    <label>_category</label>
    <info>Math</info>
   </section>
   <section>
    <label>_type</label>
    <info>('a)-&gt;'a where 'a is a number type</info>
   </section>
   <section>
    <label>(unlabeled)</label>
    <info>(no doc)</info>
    <section>
     <label>default</label>
     <info>None</info>
    </section>
    <section>
     <label>type</label>
     <info>anything that is a number type</info>
    </section>
   </section>
  </section>
 </section>
 <section>
  <label>stream decoding</label>
  <info>Stream decoding methods.</info>
  <section>
   <label>AAC</label>
   <info>Use libfaad to decode any stream with an appropriate MIME type.</info>
  </section>
  <section>
   <label>AIFF</label>
   <info>Decode a AIFF stream with an appropriate MIME type.</info>
  </section>
  <section>
   <label>FLAC</label>
   <info>Use libflac to decode any stream with an appropriate MIME type.</info>
  </section>
  <section>
   <label>MAD</label>
   <info>Use libmad to decode any stream with an appropriate MIME type.</info>
  </section>
  <section>
   <label>OGG</label>
   <info>Decode as OGG any stream with an appropriate MIME type.</info>
  </section>
  <section>
   <label>PCM/BASIC</label>
   <info>Decode audio/basic as headerless stereo U8 PCM at 8kHz.</info>
  </section>
  <section>
   <label>RAW AUDIO</label>
   <info>Decode audio/x-raw.</info>
  </section>
  <section>
   <label>WAV</label>
   <info>Decode a WAV stream with an appropriate MIME type.</info>
  </section>
 </section>
 <section>
  <label>stream encoding formats</label>
  <info>Methods to encode streams.</info>
  <section>
   <label>AAC</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>AAC/FDKAAC/BUILTIN</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>AVI</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>EXTERNAL</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>FLAC</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>MP3/LIBLAME/BUILTIN</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>OGG</label>
   <info>(no doc)</info>
  </section>
  <section>
   <label>WAV</label>
   <info>(no doc)</info>
  </section>
 </section>
 <section>
  <label>video converters</label>
  <info>Methods for converting video frames.</info>
  <section>
   <label>native</label>
   <info>(no doc)</info>
  </section>
 </section>
</all>
